{"version":3,"file":"index.min.js","sources":["../../utils/lib/modify.js","../../utils/lib/extend.js","../../utils/lib/toarray.js","../src/components/formCreate.js","../../utils/lib/type.js","../../utils/lib/mergeprops.js","../src/frame/attrs.js","../../utils/lib/console.js","../../utils/lib/deepextend.js","../../utils/lib/json.js","../src/frame/util.js","../src/factory/creator.js","../src/factory/maker.js","../src/frame/api.js","../../utils/lib/tocase.js","../../utils/lib/toline.js","../../utils/lib/unique.js","../../utils/lib/deepset.js","../src/render/index.js","../src/render/cache.js","../src/render/render.js","../src/handler/page.js","../src/factory/context.js","../src/handler/loader.js","../src/handler/input.js","../src/factory/parser.js","../src/handler/context.js","../src/handler/index.js","../src/frame/fetch.js","../src/handler/inject.js","../src/handler/render.js","../src/handler/lifecycle.js","../src/handler/effect.js","../src/components/fragment.js","../src/factory/node.js","../../utils/lib/tostring.js","../src/factory/manager.js","../src/frame/provider.js","../src/parser/html.js","../src/frame/index.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n","import {$set} from './modify';\n\nconst _extends = Object.assign || function (a) {\n    for (let b, c = 1; c < arguments.length; c++) {\n        for (let d in b = arguments[c], b) {\n            Object.prototype.hasOwnProperty.call(b, d) && ($set(a, d, b[d]));\n        }\n    }\n\n    return a;\n}\n\nexport default function extend() {\n    return _extends.apply(this, arguments);\n}\n\nexport function copy(obj) {\n    if (typeof obj !== 'object' || obj === null) return obj;\n    return obj instanceof Array ? [...obj] : {...obj};\n}\n","export default function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ([null, undefined, ''].indexOf(value) > -1 ? [] : [value]);\n}\n","import extend from '@form-create/utils/lib/extend';\nimport toArray from '@form-create/utils/lib/toarray';\n\nconst NAME = 'FormCreate';\n\nconst getRuleInject = (vm, parent) => {\n    if (!vm || vm === parent) {\n        return;\n    }\n    if (vm.formCreateInject) {\n        return vm.formCreateInject\n    }\n    if (vm.$parent) {\n        return getRuleInject(vm.$parent, parent);\n    }\n}\n\nexport default function $FormCreate(FormCreate) {\n    return {\n        name: NAME,\n        componentName: NAME,\n        model: {\n            prop: 'api'\n        },\n        provide() {\n            return {\n                $pfc: this,\n            }\n        },\n        inject: {$pfc: {default: null}},\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                }\n            },\n            extendOption: Boolean,\n            disabled: Boolean,\n            value: Object,\n            api: Object,\n            name: String,\n            subForm: {\n                type: Boolean,\n                default: true\n            },\n            inFor: Boolean,\n        },\n        data() {\n            return {\n                formData: undefined,\n                destroyed: false,\n                validate: {},\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n                renderRule: [...this.rule || []],\n                ctxInject: {},\n                updateValue: JSON.stringify(this.value || {}),\n                isMore: !!this.inFor,\n            };\n        },\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _refresh() {\n                ++this.unique;\n            },\n            _renderRule() {\n                this.renderRule = [...this.rule || []];\n            },\n            _updateValue(value) {\n                if (this.destroyed) return;\n                this.updateValue = JSON.stringify(value);\n                this.$emit('update:value', value);\n            }\n        },\n        watch: {\n            value: {\n                handler(n) {\n                    if (JSON.stringify(n || {}) === this.updateValue) return;\n                    this.$f.config.forceCoverValue ? this.$f.coverValue(n || {}) : this.$f.setValue(n || {});\n                },\n                deep: true\n            },\n            option: {\n                handler() {\n                    this.formCreate.initOptions();\n                    this.$f.refresh();\n                },\n                deep: true\n            },\n            rule(n) {\n                if (n.length === this.renderRule.length && n.every(v => this.renderRule.indexOf(v) > -1)) return;\n                this.formCreate.$handle.reloadRule(n);\n                this._renderRule();\n            },\n            disabled(n) {\n                this.$f.disabled(!!n);\n            }\n        },\n        beforeCreate() {\n            this.formCreate = new FormCreate(this);\n            Object.keys(this.formCreate.prop).forEach(k => {\n                extend(this.$options[k], this.formCreate.prop[k]);\n            })\n            this.$emit('beforeCreate', this.formCreate.api());\n        },\n        created() {\n            const vm = this, fapi = this.formCreate.api();\n            const addSubForm = () => {\n                if (vm.$pfc) {\n                    const inject = getRuleInject(vm, vm.$pfc);\n                    if (inject) {\n                        let sub;\n                        if (vm.isMore) {\n                            sub = toArray(inject.getSubForm());\n                            sub.push(fapi);\n\n                        } else {\n                            sub = fapi;\n                        }\n                        inject.subForm(sub);\n                    }\n                }\n            };\n\n            const rmSubForm = () => {\n                const inject = getRuleInject(vm, vm.$pfc);\n                if (inject) {\n                    if (vm.isMore) {\n                        const sub = toArray(inject.getSubForm());\n                        const idx = sub.indexOf(fapi);\n                        if (idx > -1) {\n                            sub.splice(idx, 1);\n                        }\n                    } else {\n                        inject.subForm();\n                    }\n                }\n            };\n\n            vm.$on('hook:beforeDestroy', () => {\n                rmSubForm();\n            });\n\n            this.$watch(() => this.subForm, (n) => {\n                n ? addSubForm() : rmSubForm();\n            }, {immediate: true});\n        }\n    }\n}\n","const is = {\n    type(arg, type) {\n        return Object.prototype.toString.call(arg) === '[object ' + type + ']'\n    },\n    Undef(v) {\n        return v === undefined || v === null\n    },\n    Element(arg) {\n        return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !is.Object(arg)\n    },\n    trueArray(data) {\n        return Array.isArray(data) && data.length > 0;\n    },\n    Function(v) {\n        const type = this.getType(v);\n        return type === 'Function' || type === 'AsyncFunction';\n    },\n    getType(v) {\n        const str = Object.prototype.toString.call(v)\n        return /^\\[object (.*)\\]$/.exec(str)[1]\n    },\n    empty(value) {\n        if (value === undefined || value === null) {\n            return true;\n        }\n\n        if (Array.isArray(value) && Array.isArray(value) && !value.length) {\n            return true;\n        }\n\n        return typeof value === 'string' && !value;\n    }\n};\n\n['Date', 'Object', 'String', 'Boolean', 'Array', 'Number'].forEach(t => {\n    is[t] = function (arg) {\n        return is.type(arg, t);\n    }\n})\n\nexport function hasProperty(rule, k) {\n    return ({}).hasOwnProperty.call(rule, k)\n}\n\nexport default is;\n","export const normalMerge = ['attrs', 'props', 'domProps', 'scopedSlots'];\nexport const toArrayMerge = ['class', 'style', 'directives'];\nexport const functionalMerge = ['on', 'nativeOn'];\n\nconst mergeProps = (objects, initial = {}, opt = {}) => {\n    const _normalMerge = [...normalMerge, ...opt['normal'] || []];\n    const _toArrayMerge = [...toArrayMerge, ...opt['array'] || []];\n    const _functionalMerge = [...functionalMerge, ...opt['functional'] || []];\n    const propsMerge = opt['props'] || [];\n\n    return objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (propsMerge.indexOf(key) > -1) {\n                    a[key] = mergeProps([b[key]], a[key]);\n                } else if (_normalMerge.indexOf(key) > -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (_functionalMerge.indexOf(key) > -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                if (_normalMerge.indexOf(key) > -1 || _functionalMerge.indexOf(key) > -1 || propsMerge.indexOf(key) > -1) {\n                    a[key] = {...b[key]}\n                } else if (_toArrayMerge.indexOf(key) > -1) {\n                    a[key] = b[key] instanceof Array ? [...b[key]] : (typeof b[key] === 'object' ? {...b[key]} : b[key]);\n                } else\n                    a[key] = b[key];\n            }\n        }\n        return a\n    }, initial);\n}\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeProps;\n","import {functionalMerge, normalMerge, toArrayMerge} from '@form-create/utils/lib/mergeprops';\n\n\nexport const keyAttrs = ['type', 'slot', 'emitPrefix', 'value', 'name', 'native', 'hidden', 'display', 'inject', 'options', 'emit', 'nativeEmit', 'link', 'prefix', 'suffix', 'update', 'sync', 'optionsTo', 'key', 'preview', 'component', 'cache'];\n\nexport const arrayAttrs = ['validate', 'children', 'control'];\n\nexport const normalAttrs = ['effect', 'deep'];\n\nexport function attrs() {\n    return [...keyAttrs, ...normalMerge, ...toArrayMerge, ...functionalMerge, ...arrayAttrs, ...normalAttrs];\n}\n","export function format(type, msg, rule) {\n    return (`[form-create ${type}]: ${msg}` + (rule ? ('\\n\\nrule: ' + JSON.stringify(rule.getRule ? rule.getRule() : rule)) : ''))\n}\n\nexport function tip(msg, rule) {\n    console.warn(format('tip', msg, rule));\n}\n\nexport function err(msg, rule) {\n    console.error(format('err', msg, rule));\n}\n\nexport function logError(e) {\n    err(e.toString());\n    console.error(e);\n}\n","import {$set} from './modify';\nimport is from './type';\n\nexport default function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || is.Object(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone && mode !== undefined) {\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone._clone());\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                origin[key] = deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n                if (!is.Undef(clone)) {\n                    if (!is.Undef(clone.__json)) {\n                        origin[key].__json = clone.__json;\n                    }\n                    if (!is.Undef(clone.__origin)) {\n                        origin[key].__origin = clone.__origin;\n                    }\n                }\n            }\n        }\n    }\n    return (mode !== undefined && Array.isArray(origin)) ? origin.filter(v => !v || !v.__ctrl) : origin\n}\n\nexport function deepCopy(value) {\n    return deepExtend({}, {value}).value;\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n","import deepExtend from './deepextend';\nimport {err} from './console';\nimport is, {hasProperty} from './type';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nconst $T = '$FN:';\nconst $TX = '$FNX:';\nconst FUNCTION = 'function';\n\nexport function toJson(obj, space) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== FUNCTION) {\n            return val;\n        }\n        if (val.__json) {\n            return val.__json;\n        }\n        if (val.__origin)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n        return PREFIX + val + SUFFIX;\n    }, space);\n}\n\nfunction makeFn(fn) {\n    return (new Function('return ' + fn))();\n}\n\nexport function parseFn(fn, mode) {\n    if (fn && is.String(fn) && fn.length > 4) {\n        let v = fn.trim();\n        let flag = false;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                flag = true;\n            } else if (v.indexOf($T) === 0) {\n                v = v.replace($T, '');\n                flag = true;\n            } else if (v.indexOf($TX) === 0) {\n                v = makeFn('function($inject){' + v.replace($TX, '') + '}');\n                v.__json = fn;\n                v.__inject = true;\n                return v;\n            } else if (!mode && v.indexOf(FUNCTION) === 0 && v !== FUNCTION) {\n                flag = true;\n            }\n            if (!flag) return fn;\n            const val = makeFn((v.indexOf(FUNCTION) === -1 && v.indexOf('(') !== 0) ? (FUNCTION + ' ' + v) : v);\n            val.__json = fn;\n            return val;\n        } catch (e) {\n            err(`解析失败:${v}\\n\\nerr: ${e}`);\n            return undefined;\n        }\n    }\n    return fn;\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (is.Undef(v) || !v.indexOf) return v;\n        return parseFn(v, mode);\n    });\n}\n","import is from '@form-create/utils/lib/type';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {arrayAttrs, normalAttrs} from './attrs';\nimport {logError} from '@form-create/utils/lib/console';\nimport {parseJson, toJson} from '@form-create/utils/lib/json';\nimport deepExtend from '@form-create/utils/lib/deepextend';\n\nexport {parseFn} from '@form-create/utils/lib/json';\nexport {parseJson, toJson}\n\nexport function enumerable(value, writable) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false,\n        writable: !!writable\n    }\n}\n\n//todo 优化位置\nexport function copyRule(rule) {\n    return copyRules([rule])[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], [...rules], mode || false);\n}\n\nexport function mergeRule(rule, merge) {\n    mergeProps(Array.isArray(merge) ? merge : [merge], rule, {array: arrayAttrs, normal: normalAttrs});\n    return rule;\n}\n\nexport function getRule(rule) {\n    const r = is.Function(rule.getRule) ? rule.getRule() : rule;\n    if (!r.type) {\n        r.type = 'input';\n    }\n    return r;\n}\n\nexport function mergeGlobal(target, merge) {\n    if (!target) return merge;\n    Object.keys(merge || {}).forEach((k) => {\n        if (merge[k]) {\n            target[k] = mergeRule(target[k] || {}, merge[k])\n        }\n    });\n    return target;\n}\n\nexport function funcProxy(that, proxy) {\n    Object.defineProperties(that, Object.keys(proxy).reduce((initial, k) => {\n        initial[k] = {\n            get() {\n                return proxy[k]();\n            }\n        }\n        return initial;\n    }, {}))\n}\n\nexport function byCtx(rule) {\n    return rule.__fc__ || (rule.__origin__ ? rule.__origin__.__fc__ : null)\n}\n\nexport function invoke(fn, def) {\n    try {\n        def = fn()\n    } catch (e) {\n        logError(e);\n    }\n    return def;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {attrs} from '../frame/attrs';\nimport {copyRule, mergeRule} from '../frame/util';\nimport {$set} from '@form-create/utils/lib/modify';\n\nexport function baseRule() {\n    return {\n        props: {},\n        on: {},\n        options: [],\n        children: [],\n        effect: {},\n        hidden: false,\n        display: true,\n        value: undefined,\n    };\n}\n\nexport function creatorFactory(name, init) {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (init) {\n            if (is.Function(init)) init(maker);\n            else maker.props(init);\n        }\n        return maker;\n    };\n}\n\nexport default function Creator(type, title, field, value, props) {\n    this._data = extend(baseRule(), {type, title, field, value, props: props || {}});\n    this.event = this.on;\n}\n\nextend(Creator.prototype, {\n    getRule() {\n        return this._data;\n    },\n    setProp(key, value) {\n        $set(this._data, key, value);\n        return this;\n    },\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = copyRule(this._data);\n        return clone;\n    },\n})\n\nexport function appendProto(attrs) {\n    attrs.forEach(name => {\n        Creator.prototype[name] = function (key) {\n            mergeRule(this._data, {[name]: arguments.length < 2 ? key : {[key]: arguments[1]}})\n            return this;\n        };\n    });\n}\n\nappendProto(attrs());\n","import {creatorFactory} from './creator';\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    return {\n        create,\n        createTmp,\n        template: createTmp,\n        factory: creatorFactory\n    };\n}\n","import {byCtx, invoke, mergeRule, toJson} from './util';\nimport {$set} from '@form-create/utils/lib/modify';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport extend from '@form-create/utils/lib/extend';\nimport {format} from '@form-create/utils/lib/console';\n\n\nfunction copy(value) {\n    return deepCopy(value);\n}\n\nexport default function Api(h) {\n\n    function tidyFields(fields) {\n        if (is.Undef(fields))\n            fields = h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    function props(fields, key, val) {\n        tidyFields(fields).forEach(field => {\n            h.getCtxs(field).forEach(ctx => {\n                $set(ctx.rule, key, val);\n                h.$render.clearCache(ctx);\n            });\n        })\n    }\n\n    function allSubForm() {\n        const subs = h.subForm;\n        return Object.keys(subs).reduce((initial, k) => {\n            const sub = subs[k];\n            if (!sub) return initial;\n            if (Array.isArray(sub))\n                initial.push(...sub);\n            else\n                initial.push(sub);\n            return initial;\n        }, []);\n    }\n\n    const api = {\n        get config() {\n            return h.options\n        },\n        get options() {\n            return h.options\n        },\n        get form() {\n            return h.form\n        },\n        get rule() {\n            return h.rules\n        },\n        get parent() {\n            return h.vm.$pfc && h.vm.$pfc.$f\n        },\n        get top() {\n            if(api.parent){\n                return api.parent.top;\n            }\n            return api;\n        },\n        get children() {\n            return allSubForm();\n        },\n        formData(fields) {\n            return tidyFields(fields).reduce((initial, id) => {\n                const ctx = h.getFieldCtx(id);\n                if (!ctx) return initial;\n                initial[ctx.field] = copy(ctx.rule.value);\n                return initial;\n            }, h.options.appendValue ? copy(h.appendData) : {});\n        },\n        getValue(field) {\n            const ctx = h.getFieldCtx(field);\n            if (!ctx) return;\n            return copy(ctx.rule.value);\n        },\n        coverValue(formData) {\n            const data = {...(formData || {})};\n            h.deferSyncValue(() => {\n                api.fields().forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (ctxs) {\n                        const flag = hasProperty(data, key);\n                        ctxs.forEach(ctx => {\n                            ctx.rule.value = flag ? data[key] : undefined;\n                        })\n                        delete data[key];\n                    }\n                });\n                extend(h.appendData, data);\n            })\n        },\n        setValue(field) {\n            let formData = field;\n            if (arguments.length >= 2)\n                formData = {[field]: arguments[1]};\n            h.deferSyncValue(() => {\n                Object.keys(formData).forEach(key => {\n                    const ctxs = h.fieldCtx[key];\n                    if (!ctxs) return h.appendData[key] = formData[key];\n                    ctxs.forEach(ctx => {\n                        ctx.rule.value = formData[key];\n                    });\n                });\n            })\n        },\n        removeField(field) {\n            const ctx = h.getCtx(field);\n            h.deferSyncValue(() => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rm();\n                });\n            }, true);\n            return ctx ? ctx.origin : undefined;\n        },\n        removeRule(rule) {\n            const ctx = rule && byCtx(rule);\n            if (!ctx) return;\n            ctx.rm();\n            return ctx.origin;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode && h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, child) => {\n            let index = h.sort.length - 1, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                    index = ctx.rule.children.length - 1;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, child) => {\n            let index = 0, rules;\n            const ctx = h.getCtx(after);\n\n            if (ctx) {\n                if (child) {\n                    rules = ctx.rule.children;\n                } else {\n                    index = ctx.root.indexOf(ctx.origin);\n                    rules = ctx.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(state, fields) {\n            props(fields, 'hidden', !!state);\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.hidden;\n        },\n        display(state, fields) {\n            props(fields, 'display', !!state);\n            h.refresh();\n        },\n        displayStatus(id) {\n            const ctx = h.getCtx(id);\n            if (!ctx) return;\n            return !!ctx.rule.display;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields).forEach((field) => {\n                h.getCtxs(field).forEach(ctx => {\n                    ctx.rule.props && $set(ctx.rule.props, 'disabled', !!disabled);\n                });\n            });\n            h.refresh();\n        },\n        all(origin) {\n            return Object.keys(h.ctxs).map(k => {\n                const ctx = h.ctxs[k];\n                return origin ? ctx.origin : ctx.rule;\n            });\n        },\n        model(origin) {\n            return h.fields().reduce((initial, key) => {\n                const ctx = h.fieldCtx[key][0];\n                initial[key] = origin ? ctx.origin : ctx.rule;\n                return initial;\n            }, {});\n        },\n        component(origin) {\n            return Object.keys(h.nameCtx).reduce((initial, key) => {\n                const ctx = h.nameCtx[key].map(ctx => origin ? ctx.origin : ctx.rule);\n                initial[key] = ctx.length === 1 ? ctx[0] : ctx;\n                return initial;\n            }, {});\n        },\n        bind() {\n            return api.form;\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            h.fc.updateOptions(options);\n            api.refresh();\n        },\n        onSubmit(fn) {\n            api.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            if (Array.isArray(field)) {\n                field.forEach(v => api.sync(v));\n                return;\n            }\n            let ctxs = is.Object(field) ? byCtx(field) : h.getCtxs(field);\n            if (!ctxs) {\n                return;\n            }\n            ctxs = Array.isArray(ctxs) ? ctxs : [ctxs];\n            ctxs.forEach(ctx => {\n                if (!ctx.deleted) {\n                    const subForm = h.subForm[ctx.id];\n                    if (subForm) {\n                        if (Array.isArray(subForm)) {\n                            subForm.forEach(form => {\n                                form.refresh();\n                            })\n                        } else if (subForm) {\n                            subForm.refresh();\n                        }\n                    }\n                    //ctx.updateKey(true);\n                    h.$render.clearCache(ctx);\n                }\n            });\n            h.refresh();\n        },\n        refresh: () => {\n            allSubForm().forEach(sub => {\n                sub.refresh();\n            });\n            h.$render.clearCacheAll();\n            h.refresh();\n        },\n        refreshOptions() {\n            h.$manager.updateOptions(h.options);\n            api.refresh();\n        },\n        hideForm: (hide) => {\n            $set(h.vm, 'isShow', !hide);\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule(id, rule) {\n            h.getCtxs(id).forEach(ctx => {\n                extend(ctx.rule, rule);\n            });\n        },\n        updateRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.updateRule(id, rules[id]);\n            })\n        },\n        mergeRule: (id, rule) => {\n            h.getCtxs(id).forEach(ctx => {\n                mergeRule(ctx.rule, rule);\n            });\n        },\n        mergeRules(rules) {\n            Object.keys(rules).forEach(id => {\n                api.mergeRule(id, rules[id]);\n            })\n        },\n        getRule: (id, origin) => {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                return origin ? ctx.origin : ctx.rule;\n            }\n        },\n        setEffect(id, attr, value) {\n            const ctx = h.getCtx(id);\n            if (ctx && attr) {\n                if (attr[0] === '$') {\n                    attr = attr.substr(1);\n                }\n                if (hasProperty(ctx.rule, '$' + attr)) {\n                    $set(ctx.rule, '$' + attr, value);\n                }\n                if (!hasProperty(ctx.rule, 'effect')) {\n                    $set(ctx.rule, 'effect', {});\n                }\n                $set(ctx.rule.effect, attr, value);\n            }\n        },\n        clearEffectData(id, attr) {\n            const ctx = h.getCtx(id);\n            if (ctx) {\n                if (attr && attr[0] === '$') {\n                    attr = attr.substr(1);\n                }\n                ctx.clearEffectData(attr);\n                api.sync(id);\n            }\n        },\n        updateValidate(id, validate, merge) {\n            if (merge) {\n                api.mergeRule(id, {validate})\n            } else {\n                props(id, 'validate', validate);\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                api.updateValidate(id, validates[id], merge);\n            })\n        },\n        refreshValidate() {\n            h.vm.validate = {};\n            api.refresh();\n        },\n        resetFields(fields) {\n            tidyFields(fields).forEach(field => {\n                h.getCtxs(field).forEach(ctx => {\n                    h.$render.clearCache(ctx);\n                    ctx.rule.value = copy(ctx.defaultValue);\n                });\n            });\n        },\n        method(id, name) {\n            const el = api.el(id);\n            if (!el || !el[name])\n                throw new Error(format('err', `${name}方法不存在`));\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        exec(id, name, ...args) {\n            return invoke(() => api.method(id, name)(...args));\n        },\n        toJson(space) {\n            return toJson(api.rule, space);\n        },\n        trigger(id, event, ...args) {\n            const el = api.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const ctx = h.getCtx(id);\n            if (ctx) return ctx.exportEl || ctx.el || h.vm.$refs[ctx.ref];\n        },\n        closeModal: (id) => {\n            const el = api.el(id);\n            el && el.$emit && el.$emit('close-modal');\n        },\n        getSubForm(field) {\n            const ctx = h.getCtx(field);\n            return ctx ? h.subForm[ctx.id] : undefined;\n        },\n        nextTick(fn) {\n            h.bus.$once('next-tick', fn);\n            h.refresh();\n        },\n        nextRefresh(fn) {\n            h.nextRefresh();\n            fn && invoke(fn);\n        },\n        emit(name, ...args) {\n            h.vm.$emit(name, ...args);\n        },\n        deferSyncValue(fn, sync){\n            h.deferSyncValue(fn, sync);\n        },\n        helper: {\n            tidyFields, props\n        }\n    };\n\n    ['on', 'once', 'off', 'set'].forEach(n => {\n        api[n] = function (...args) {\n            h.vm[`$${n}`](...args);\n        }\n    });\n\n    api.changeValue = api.changeField = api.setValue;\n\n    return api;\n}\n","export default function toCase(str) {\n    const to = str.replace(/(-[a-z])/g, function (v) {\n        return v.replace('-', '').toLocaleUpperCase();\n    });\n\n    return lower(to);\n}\n\nexport function lower(str) {\n    return str.replace(str[0], str[0].toLowerCase());\n}\n","export default function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLocaleLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n","let id = 0;\n\nexport default function uniqueId() {\n    const num = 370 + (++id);\n    return 'F' + Math.random().toString(36).substr(3, 3) + Number(`${Date.now()}`).toString(36) + num.toString(36) + 'c';\n}\n","export default function deepSet(data, idx, val) {\n    let _data = data, to;\n    (idx || '').split('.').forEach(v => {\n        if (to) {\n            if (!_data[to] || typeof _data[to] != 'object') {\n                _data[to] = {}\n            }\n            _data = _data[to];\n        }\n        to = v;\n    })\n    _data[to] = val;\n    return _data;\n}\n","import useCache from './cache';\nimport useRender from './render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\n\nexport default function Render(handle) {\n    extend(this, {\n        $handle: handle,\n        fc: handle.fc,\n        vm: handle.vm,\n        $manager: handle.$manager,\n        vNode: new handle.fc.CreateNode(handle.vm),\n    });\n\n    funcProxy(this, {\n        options() {\n            return handle.options;\n        },\n        sort() {\n            return handle.sort;\n        }\n    })\n\n    this.initCache();\n    this.initRender();\n}\n\nuseCache(Render);\nuseRender(Render)\n","import extend from '@form-create/utils/lib/extend';\n\nexport default function useCache(Render) {\n    extend(Render.prototype, {\n        initCache() {\n            this.clearCacheAll();\n        },\n        clearCache(ctx) {\n            if(ctx.rule.cache){\n                return;\n            }\n            if (!this.cache[ctx.id]) {\n                ctx.parent && this.clearCache(ctx.parent);\n                return;\n            }\n            if (this.cache[ctx.id].use === true || this.cache[ctx.id].parent) {\n                this.$handle.refresh();\n            }\n            const parent = this.cache[ctx.id].parent;\n            this.cache[ctx.id] = null;\n            parent && this.clearCache(parent);\n        },\n        clearCacheAll() {\n            this.cache = {};\n        },\n        setCache(ctx, vnode, parent) {\n            this.cache[ctx.id] = {\n                vnode,\n                use: false,\n                parent,\n                slot: ctx.rule.slot\n            };\n        },\n        getCache(ctx) {\n            const cache = this.cache[ctx.id];\n            if (cache) {\n                cache.use = true;\n                return cache.vnode;\n            }\n            return undefined;\n        }\n    })\n\n}\n","import extend from '@form-create/utils/lib/extend';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {_vue as Vue} from '../frame';\nimport {tip} from '@form-create/utils/lib/console';\nimport {invoke, mergeRule} from '../frame/util';\nimport toCase, {lower} from '@form-create/utils/lib/tocase';\nimport {$set, deepSet, toLine} from '@form-create/utils';\n\nexport default function useRender(Render) {\n    extend(Render.prototype, {\n        initRender() {\n            this.tempList = {};\n            this.clearOrgChildren();\n        },\n        initOrgChildren() {\n            const ctxs = this.$handle.ctxs;\n            this.orgChildren = Object.keys(ctxs).reduce((initial, id) => {\n                if (ctxs[id].parser.loadChildren !== false) {\n                    const children = ctxs[id].rule.children;\n                    initial[id] = is.trueArray(children) ? [...children] : [];\n                }\n\n                return initial;\n            }, {});\n\n        },\n        clearOrgChildren() {\n            this.orgChildren = {};\n        },\n        getTypeSlot(ctx) {\n            const _fn = (vm) => {\n                if (vm) {\n                    let slot = undefined;\n                    if (ctx.rule.field) {\n                        slot = vm.$scopedSlots['field-' + toLine(ctx.rule.field)] || vm.$scopedSlots['field-' + ctx.rule.field];\n                    }\n                    if (!slot) {\n                        slot = vm.$scopedSlots['type-' + toLine(ctx.type)] || vm.$scopedSlots['type-' + ctx.type];\n                    }\n                    if (slot) {\n                        return slot;\n                    }\n                    return _fn(vm.$pfc);\n                }\n            }\n            return _fn(this.vm);\n        },\n        render() {\n            if (!this.vm.isShow) {\n                return;\n            }\n            this.$h = this.vm.$createElement;\n            this.$manager.beforeRender();\n\n            let vn;\n\n            const make = () => this.renderList();\n            make.renderSlot = slot => this.renderList(slot);\n            make.renderName = name => this.renderId(name);\n            make.renderField = field => this.renderId(field, 'field');\n\n            if (this.vm.$scopedSlots.container) {\n                vn = [this.vm.$scopedSlots.container(make)];\n            } else {\n                vn = make();\n            }\n            return this.$manager.render(vn);\n        },\n        renderList(slot) {\n            return this.sort.map((id) => {\n                return slot ? this.renderSlot(this.$handle.ctxs[id], slot) : this.renderCtx(this.$handle.ctxs[id]);\n            }).filter((val) => val !== undefined);\n        },\n        makeVm(rule) {\n            const vm = rule.vm;\n            if (!vm)\n                return new Vue;\n            else if (is.Function(vm))\n                return invoke(() => rule.vm(this.$handle.getInjectData(rule)));\n            else if (!vm._isVue)\n                return new Vue(vm);\n            return vm;\n        },\n        mergeGlobal(ctx) {\n            const g = this.$handle.options.global;\n            if (!g) return;\n            //todo 缓存配置,更新 option 更新\n            if (!ctx.cacheConfig)\n                ctx.cacheConfig = g[ctx.originType] || g[ctx.type] || g[ctx.trueType] || {};\n            ctx.prop = mergeRule({}, [g['*'], ctx.cacheConfig, ctx.prop]);\n        },\n        setOptions(ctx) {\n            if (ctx.prop.optionsTo && ctx.prop.options) {\n                deepSet(ctx.prop, ctx.prop.optionsTo, ctx.prop.options);\n            }\n        },\n        deepSet(ctx) {\n            const deep = ctx.rule.deep;\n            deep && Object.keys(deep).sort((a, b) => a.length < b.length ? -1 : 1).forEach(str => {\n                deepSet(ctx.prop, str, deep[str]);\n            });\n        },\n        setTempProps(vm, ctx) {\n            if (!vm.$props) return;\n\n            const {prop} = ctx;\n            const keys = Object.keys(vm.$props);\n            const inject = this.injectProp(ctx);\n            const injectKeys = Object.keys(inject);\n\n            keys.forEach(key => {\n                if (hasProperty(prop.props, key))\n                    vm.$props[key] = prop.props[key];\n                else if (injectKeys.indexOf(key) > -1) vm.$props[key] = inject[key];\n            });\n\n            const key = (vm.$options.model && vm.$options.model.prop) || 'value';\n            if (keys.indexOf(key) > -1) {\n                vm.$props[key] = prop.value;\n            }\n        },\n        renderTemp(ctx) {\n            if (!Vue.compile) {\n                tip('当前使用的Vue构建版本不支持compile,无法使用template功能');\n                return [];\n            }\n            const rule = ctx.prop;\n            const {id, key} = ctx;\n\n            if (!this.tempList[id]) {\n                if (!ctx.el) {\n                    ctx.el = this.makeVm(rule);\n                    this.vm.$nextTick(() => ctx.parser.mounted(ctx));\n                }\n\n                let vm = ctx.el;\n                if (ctx.input)\n                    vm.$on((vm.$options.model && vm.$options.model.event) || 'input', (value) => {\n                        this.onInput(ctx, value);\n                    });\n\n                this.tempList[id] = {\n                    vm,\n                    template: Vue.compile(rule.template)\n                };\n            }\n\n            const {vm, template} = this.tempList[id];\n\n            this.setTempProps(vm, ctx);\n\n            const vn = template.render.call(vm);\n\n            if (is.Undef(vn.data)) vn.data = {};\n            vn.key = key;\n            vn.data.ref = ctx.ref;\n            vn.data.key = key;\n            return vn;\n        },\n        parseSide(side, ctx) {\n            return is.Object(side) ? mergeRule({props: {formCreateInject: ctx.prop.props.formCreateInject}}, side) : side;\n        },\n        renderSides(vn, ctx, temp) {\n            const prop = ctx[temp ? 'rule' : 'prop'];\n            return [this.renderRule(this.parseSide(prop.prefix, ctx)), vn, this.renderRule(this.parseSide(prop.suffix, ctx))];\n\n        },\n        renderSlot(ctx, slot) {\n            return ctx.rule.slot === slot ? this.renderCtx(ctx) : undefined;\n        },\n        renderId(name, type) {\n            const ctxs = this.$handle[type === 'field' ? 'fieldCtx' : 'nameCtx'][name]\n            return ctxs ? ctxs.map(ctx => this.renderCtx(ctx, ctx.parent)) : undefined;\n        },\n        renderCtx(ctx, parent) {\n            if (ctx.type === 'hidden') return;\n            const rule = ctx.rule;\n            if ((!this.cache[ctx.id]) || this.cache[ctx.id].slot !== rule.slot) {\n                let vn;\n                let cacheFlag = rule.cache !== false;\n                const _type = ctx.trueType;\n                const none = !(is.Undef(rule.display) || !!rule.display);\n                if (_type === 'template' && !rule.template) {\n                    vn = this.renderSides(this.renderChildren(ctx), ctx, true);\n                    if (none) {\n                        this.display(vn);\n                    }\n                    vn = this.item(ctx, vn);\n                } else if (_type === 'fcFragment') {\n                    vn = this.renderChildren(ctx);\n                } else {\n                    ctx.initProp();\n                    this.mergeGlobal(ctx);\n                    this.$manager.tidyRule(ctx);\n                    this.deepSet(ctx);\n                    this.setOptions(ctx);\n                    this.ctxProp(ctx);\n                    let prop = ctx.prop;\n                    prop.preview = !!(hasProperty(prop, 'preview') ? prop.preview : (this.options.preview || false))\n                    prop.props.formCreateInject = this.injectProp(ctx);\n                    const preview = prop.preview;\n\n                    if (prop.hidden) {\n                        this.setCache(ctx, undefined, parent);\n                        return;\n                    }\n\n                    if (_type === 'template' && prop.template) {\n                        vn = this.renderTemp(ctx);\n                        cacheFlag = false;\n                    } else {\n                        let children = [];\n                        if (ctx.parser.renderChildren) {\n                            children = ctx.parser.renderChildren(ctx);\n                        } else if (ctx.parser.loadChildren !== false) {\n                            children = this.renderChildren(ctx);\n                        }\n                        const slot = this.getTypeSlot(ctx);\n                        if (slot) {\n                            vn = slot({\n                                rule,\n                                prop,\n                                preview,\n                                children,\n                                api: this.$handle.api,\n                                model: prop.model || {}\n                            });\n                        } else {\n                            vn = preview ? ctx.parser.preview(children, ctx) : ctx.parser.render(children, ctx);\n                        }\n                    }\n                    vn = this.renderSides(vn, ctx);\n                    if ((!(!ctx.input && is.Undef(prop.native))) && prop.native !== true) {\n                        vn = this.$manager.makeWrap(ctx, vn);\n                    }\n                    if (none) {\n                        vn = this.display(vn);\n                    }\n                    vn = this.item(ctx, vn)\n                }\n                if (cacheFlag) {\n                    this.setCache(ctx, vn, parent);\n                }\n                return vn;\n            }\n\n            return this.getCache(ctx);\n        },\n        display(vn) {\n            if (Array.isArray(vn)) {\n                const data = [];\n                vn.forEach(v => {\n                    if (Array.isArray(v)) return this.display(v);\n                    if (this.none(v)) data.push(v);\n                })\n                return data;\n            } else {\n                return this.none(vn);\n            }\n        },\n        none(vn) {\n            if (vn && vn.data) {\n                if (Array.isArray(vn.data.style)) {\n                    vn.data.style.push({display: 'none'});\n                } else if(is.String(vn.data.style)) {\n                    vn.data.style += ';display:none;';\n                } else {\n                    vn.data.style = [vn.data.style, {display: 'none'}];\n                }\n                return vn;\n            }\n        },\n        item(ctx, vn) {\n            return this.$h('fcFragment', {\n                slot: ctx.rule.slot,\n                key: ctx.key,\n            }, [vn]);\n        },\n        injectProp(ctx) {\n            if (!this.vm.ctxInject[ctx.id]) {\n                $set(this.vm.ctxInject, ctx.id, {\n                    api: this.$handle.api,\n                    form: this.fc.create,\n                    subForm: subForm => {\n                        this.$handle.addSubForm(ctx, subForm);\n                    },\n                    getSubForm: () => {\n                        return this.$handle.subForm[ctx.id];\n                    },\n                    options: [],\n                    children: [],\n                    prop: {},\n                    preview: false,\n                    field: ctx.field,\n                    rule: ctx.rule,\n                    input: ctx.input,\n                });\n            }\n            const inject = this.vm.ctxInject[ctx.id];\n            extend(inject, {\n                preview: ctx.prop.preview,\n                options: ctx.prop.options,\n                children: ctx.rule.children,\n                prop: (function () {\n                    const temp = {...ctx.prop};\n                    temp.on = temp.on ? {...temp.on} : {};\n                    delete temp.model;\n                    return temp;\n                }()),\n            });\n            return inject;\n        },\n        ctxProp(ctx, custom) {\n            const {ref, key, rule} = ctx;\n            this.$manager.mergeProp(ctx, custom);\n            ctx.parser.mergeProp(ctx, custom);\n            const props = [\n                {\n                    ref: ref,\n                    key: rule.key || `${key}fc`,\n                    slot: undefined,\n                    on: {\n                        'hook:mounted': () => {\n                            this.onMounted(ctx);\n                        },\n                        'fc.sub-form': (subForm) => {\n                            this.$handle.addSubForm(ctx, subForm);\n                        },\n                        'fc.el': (el) => {\n                            ctx.exportEl = el;\n                            if (el) {\n                                (el.$el || el).__rule__ = ctx.rule;\n                            }\n                        }\n                    },\n                }\n            ]\n\n            if (!custom && ctx.input) {\n                ctx.prop.model = {\n                    value: this.$handle.getFormData(ctx),\n                    callback: (value) => {\n                        this.onInput(ctx, value);\n                    },\n                    expression: `formData.${ctx.id}`\n                };\n            }\n            mergeProps(props, ctx.prop);\n            return ctx.prop;\n        },\n        onMounted(ctx) {\n            ctx.el = this.vm.$refs[ctx.ref];\n            if (ctx.el) {\n                (ctx.el.$el || ctx.el).__rule__ = ctx.rule;\n            }\n            ctx.parser.mounted(ctx);\n            this.$handle.effect(ctx, 'mounted');\n        },\n        onInput(ctx, value) {\n            this.$handle.onInput(ctx, value);\n        },\n        renderChildren(ctx) {\n            const {children} = ctx.rule, orgChildren = this.orgChildren[ctx.id];\n\n            const isRm = child => {\n                return !is.String(child) && child.__fc__ && !this.$handle.ctxs[child.__fc__.id];\n            }\n\n            if (!is.trueArray(children) && orgChildren) {\n                this.$handle.deferSyncValue(() => {\n                    orgChildren.forEach(child => {\n                        if (!child) return;\n                        if (isRm(child)) {\n                            this.$handle.rmCtx(child.__fc__);\n                        }\n                    });\n                });\n                this.orgChildren[ctx.id] = [];\n                return [];\n            }\n\n            orgChildren && this.$handle.deferSyncValue(() => {\n                orgChildren.forEach(child => {\n                    if (!child) return;\n                    if (children.indexOf(child) === -1 && isRm(child)) {\n                        this.$handle.rmCtx(child.__fc__);\n                    }\n                });\n            });\n\n            return children.map(child => {\n                if (!child) return;\n                if (is.String(child)) return child;\n                if (child.__fc__) {\n                    return this.renderCtx(child.__fc__, ctx);\n                }\n                if (child.type) {\n                    this.vm.$nextTick(() => {\n                        this.$handle.loadChildren(children, ctx);\n                        this.$handle.refresh();\n                    });\n                }\n            });\n\n        },\n        defaultRender(ctx, children) {\n            const prop = ctx.prop;\n            if(prop.component)\n                return this.vNode.makeComponent(prop.component, prop, children)\n            if (this.vNode[ctx.type])\n                return this.vNode[ctx.type](prop, children);\n            if (this.vNode[ctx.originType])\n                return this.vNode[ctx.originType](prop, children);\n            return this.vNode.make(lower(ctx.originType), prop, children);\n        },\n        renderRule(rule, children, origin) {\n            if (!rule) return undefined;\n            if (is.String(rule)) return rule;\n\n            let type;\n            if (origin) {\n                type = rule.type;\n            } else {\n                type = rule.is;\n                if (rule.type) {\n                    type = toCase(rule.type);\n                    const alias = this.vNode.aliasMap[type];\n                    if (alias) type = toCase(alias);\n                }\n            }\n\n            if (!type) return undefined;\n            let data = [[children]];\n            if (is.trueArray(rule.children)) {\n                data.push(rule.children.map(v => this.renderRule(v)));\n            }\n            return this.$h(type, {...rule}, data);\n        }\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\n\nconst EVENT = ['hook:updated', 'hook:mounted'];\n\nexport default function usePage(Handler) {\n    extend(Handler.prototype, {\n        usePage() {\n            const page = this.options.page;\n            if (!page) return;\n            let first = 25;\n            let limit = getLimit(this.rules);\n            if (is.Object(page)) {\n                if (page.first) first = parseInt(page.first, 10) || first;\n                if (page.limit) limit = parseInt(page.limit, 10) || limit;\n            }\n            extend(this, {\n                first,\n                limit,\n                pageEnd: this.rules.length <= first,\n            })\n\n            this.bus.$on('page-end', () => this.vm.$emit('page-end', this.api));\n            this.pageLoad();\n        },\n        pageLoad() {\n            const pageFn = () => {\n                if (this.pageEnd) {\n                    this.vm.$off(EVENT, pageFn);\n                    this.bus.$emit('page-end');\n                } else {\n                    this.first += this.limit;\n                    this.pageEnd = this.rules.length <= this.first;\n                    this.loadRule();\n                    this.refresh();\n                }\n            }\n            this.vm.$on(EVENT, pageFn);\n        },\n    })\n}\n\n\nfunction getLimit(rules) {\n    return rules.length < 31 ? 31 : Math.ceil(rules.length / 3);\n}\n","import unique from '@form-create/utils/lib/unique';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport {enumerable, mergeRule} from '../frame/util';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\n\nfunction bind(ctx) {\n    Object.defineProperties(ctx.origin, {\n        __fc__: enumerable(ctx, true)\n    });\n}\n\nexport default function RuleContext(handle, rule, defaultValue) {\n    const id = unique();\n\n    extend(this, {\n        id,\n        ref: id,\n        wrapRef: id + 'fi',\n        rule,\n        origin: rule.__origin__ || rule,\n        name: rule.name,\n\n        watch: [],\n        linkOn: [],\n        root: [],\n        ctrlRule: [],\n        parent: null,\n        cacheConfig: null,\n        prop: {...rule},\n        computed: {},\n        payload: {},\n        input: !!rule.field,\n        el: undefined,\n        exportEl: undefined,\n        defaultValue: rule.field ? deepCopy(defaultValue) : undefined,\n        field: rule.field || undefined,\n    })\n\n    this.updateType();\n    this.updateKey();\n    bind(this);\n    this.update(handle, true);\n}\n\nextend(RuleContext.prototype, {\n    effectData(name) {\n        if (!this.payload[name]) {\n            this.payload[name] = {};\n        }\n        return this.payload[name];\n    },\n    clearEffectData(name) {\n        if (name === undefined) {\n            this.payload = {};\n        } else {\n            delete this.payload[name];\n        }\n    },\n    updateKey(flag) {\n        this.key = unique();\n        flag && this.parent && this.parent.updateKey(flag);\n    },\n    updateType() {\n        this.originType = this.rule.type;\n        this.type = toCase(this.rule.type);\n    },\n    setParser(parser) {\n        this.parser = parser;\n        parser.init(this);\n    },\n    initProp() {\n        const rule = {...this.rule};\n        delete rule.children;\n        this.prop = mergeRule({}, [rule, ...Object.keys(this.payload).map(k => this.payload[k]), this.computed]);\n    },\n    check(handle) {\n        return this.vm === handle.vm\n    },\n    unwatch() {\n        this.watch.forEach(un => un());\n        this.watch = [];\n    },\n    unlink() {\n        this.linkOn.forEach(un => un());\n        this.linkOn = [];\n    },\n    link() {\n        this.unlink();\n        this.$handle.appendLink(this);\n    },\n    watchTo() {\n        this.$handle.watchCtx(this);\n    },\n    delete() {\n        const undef = void 0;\n        this.unwatch();\n        this.unlink();\n        this.rmCtrl();\n        extend(this, {\n            deleted: true,\n            prop: {...this.rule},\n            computed: {},\n            el: undef,\n            $handle: undef,\n            $render: undef,\n            $api: undef,\n            vm: undef,\n            vNode: undef,\n            parent: null,\n            cacheConfig: null,\n        })\n    },\n    rmCtrl() {\n        this.ctrlRule.forEach(ctrl => ctrl.__fc__ && ctrl.__fc__.rm());\n        this.ctrlRule = [];\n    },\n    rm() {\n        const _rm = () => {\n            let index = this.root.indexOf(this.origin);\n            if (index > -1) {\n                this.root.splice(index, 1);\n                this.$handle && this.$handle.refresh();\n            }\n        }\n        if (this.deleted) {\n            _rm();\n            return;\n        }\n        this.$handle.noWatch(() => {\n            this.$handle.deferSyncValue(() => {\n                this.rmCtrl();\n                _rm();\n                this.$handle.rmCtx(this);\n                extend(this, {\n                    root: []\n                });\n            }, this.input);\n        });\n    },\n    update(handle, init) {\n        extend(this, {\n            deleted: false,\n            $handle: handle,\n            $render: handle.$render,\n            $api: handle.api,\n            vm: handle.vm,\n            trueType: handle.getType(this.originType),\n            vNode: handle.$render.vNode,\n            updated: false,\n            cacheValue: this.rule.value\n        });\n        !init && this.unwatch();\n        this.watchTo();\n        this.link();\n    }\n})\n","import extend from '@form-create/utils/lib/extend';\nimport {byCtx, copyRule, enumerable, getRule, invoke, parseFn} from '../frame/util';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {baseRule} from '../factory/creator';\nimport RuleContext from '../factory/context';\nimport mergeProps from '@form-create/utils/lib/mergeprops';\nimport {$set} from '@form-create/utils';\n\nconst condition = {\n    '==': (b) => (a) => a === b,\n    '!=': (b) => (a) => a !== b,\n    '<>': (b) => (a) => a !== b,\n    '>': (b) => (a) => a > b,\n    '>=': (b) => (a) => a >= b,\n    '<': (b) => (a) => a < b,\n    '<=': (b) => (a) => a <= b,\n    'in': (b) => (a) => (b && b.indexOf && b.indexOf(a) > -1),\n    'on': (b) => (a) => (a && a.indexOf && a.indexOf(b) > -1),\n    'notIn': (b) => (a) => !(condition.in(b)(a)),\n    'notOn': (b) => (a) => !(condition.on(b)(a)),\n    'between': (b) => (a) => a > b[0] && a < b[1],\n    'notBetween': (b) => (a) => a < b[0] || a > b[1],\n}\n\n\nexport default function useLoader(Handler) {\n    extend(Handler.prototype, {\n        nextRefresh(fn) {\n            const id = this.loadedId;\n            this.vm.$nextTick(() => {\n                id === this.loadedId && (fn ? fn() : this.refresh());\n            });\n        },\n        parseRule(_rule) {\n            const rule = getRule(_rule);\n\n            Object.defineProperties(rule, {\n                __origin__: enumerable(_rule, true)\n            });\n\n            fullRule(rule);\n            this.appendValue(rule);\n\n            rule.options = Array.isArray(rule.options) ? rule.options : [];\n\n            [rule, rule['prefix'], rule['suffix']].forEach(item => {\n                if (!item) {\n                    return;\n                }\n                this.loadFn(item, rule);\n            });\n            this.loadCtrl(rule);\n            if (rule.update) {\n                rule.update = parseFn(rule.update);\n            }\n            return rule;\n        },\n        loadFn(item, rule) {\n            ['on', 'props', 'nativeOn', 'deep'].forEach(k => {\n                item[k] && this.parseInjectEvent(rule, item[k]);\n            });\n        },\n        loadCtrl(rule) {\n            rule.control && rule.control.forEach(ctrl => {\n                if (ctrl.handle) {\n                    ctrl.handle = parseFn(ctrl.handle)\n                }\n            })\n        },\n        syncProp(ctx) {\n            const rule = ctx.rule;\n            is.trueArray(rule.sync) && mergeProps([{\n                on: rule.sync.reduce((pre, prop) => {\n                    pre[`update:${prop}`] = (val) => {\n                        rule.props[prop] = val;\n                        this.vm.$emit('sync', prop, val, rule, this.fapi);\n                    }\n                    return pre\n                }, {})\n            }], ctx.computed)\n        },\n        loadRule() {\n            // console.warn('%c load', 'color:blue');\n            this.cycleLoad = false;\n            this.loading = true;\n            if (this.pageEnd) {\n                this.bus.$emit('load-start');\n            }\n            this.deferSyncValue(() => {\n                this._loadRule(this.rules);\n                this.loading = false;\n                if (this.cycleLoad && this.pageEnd) {\n                    return this.loadRule();\n                }\n                if (this.pageEnd) {\n                    this.bus.$emit('load-end');\n                }\n                this.vm._renderRule();\n                this.$render.initOrgChildren();\n                this.syncForm();\n            });\n        },\n        loadChildren(children, parent) {\n            this.cycleLoad = false;\n            this.loading = true;\n            this.bus.$emit('load-start');\n            this._loadRule(children, parent);\n            this.loading = false;\n            if (this.cycleLoad) {\n                return this.loadRule();\n            } else {\n                this.bus.$emit('load-end');\n                this.syncForm();\n            }\n            this.$render.clearCache(parent);\n        },\n        _loadRule(rules, parent) {\n\n            const preIndex = (i) => {\n                let pre = rules[i - 1];\n                if (!pre || !pre.__fc__) {\n                    return i > 0 ? preIndex(i - 1) : -1;\n                }\n                let index = this.sort.indexOf(pre.__fc__.id);\n                return index > -1 ? index : preIndex(i - 1);\n            }\n\n            const loadChildren = (children, parent) => {\n                if (is.trueArray(children)) {\n                    this._loadRule(children, parent);\n                }\n            };\n\n            rules.map((_rule, index) => {\n                if (parent && !is.Object(_rule)) return;\n                if (!this.pageEnd && !parent && index >= this.first) return;\n\n                if (_rule.__fc__ && _rule.__fc__.root === rules && this.ctxs[_rule.__fc__.id]) {\n                    loadChildren(_rule.__fc__.rule.children, _rule.__fc__);\n                    return _rule.__fc__;\n                }\n\n                let rule = getRule(_rule);\n\n                const isRepeat = () => {\n                    return !!(rule.field && this.fieldCtx[rule.field] && this.fieldCtx[rule.field][0] !== _rule.__fc__)\n                }\n\n                this.ruleEffect(rule, 'init', {repeat: isRepeat()});\n\n                if (isRepeat()) {\n                    this.vm.$emit('repeat-field', _rule, this.api);\n                }\n\n                let ctx;\n                let isCopy = false;\n                let isInit = !!_rule.__fc__;\n                let defaultValue = rule.value;\n                if (isInit) {\n                    ctx = _rule.__fc__;\n                    defaultValue = ctx.defaultValue;\n                    const check = !ctx.check(this);\n                    if (ctx.deleted) {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            ctx.update(this);\n                        }\n                    } else {\n                        if (check) {\n                            if (isCtrl(ctx)) {\n                                return;\n                            }\n                            rules[index] = _rule = _rule._clone ? _rule._clone() : copyRule(_rule);\n                            ctx = null;\n                            isCopy = true;\n                        }\n                    }\n                }\n                if (!ctx) {\n                    const rule = this.parseRule(_rule);\n                    ctx = new RuleContext(this, rule, isInit ? defaultValue : rule.value);\n                    this.bindParser(ctx);\n                } else {\n                    if (ctx.originType !== ctx.rule.type) {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    }\n                    this.appendValue(ctx.rule);\n                }\n                [false, true].forEach(b => this.parseEmit(ctx, b));\n                this.syncProp(ctx);\n                ctx.parent = parent || null;\n                ctx.root = rules;\n                this.setCtx(ctx);\n\n                !isCopy && !isInit && this.effect(ctx, 'load');\n\n                this.effect(ctx, 'created');\n\n                ctx.parser.loadChildren === false || loadChildren(ctx.rule.children, ctx);\n\n                if (!parent) {\n                    const _preIndex = preIndex(index);\n                    if (_preIndex > -1 || !index) {\n                        this.sort.splice(_preIndex + 1, 0, ctx.id);\n                    } else {\n                        this.sort.push(ctx.id);\n                    }\n                }\n\n                const r = ctx.rule;\n                if (!ctx.updated) {\n                    ctx.updated = true;\n                    if (is.Function(r.update)) {\n                        this.bus.$once('load-end', () => {\n                            this.refreshUpdate(ctx, r.value, 'init');\n                        });\n                    }\n                    this.effect(ctx, 'loaded');\n                }\n\n                if (ctx.input)\n                    Object.defineProperty(r, 'value', this.valueHandle(ctx));\n                if (this.refreshControl(ctx)) this.cycleLoad = true;\n                return ctx;\n            });\n        },\n        refreshControl(ctx) {\n            return ctx.input && ctx.rule.control && this.useCtrl(ctx);\n        },\n        useCtrl(ctx) {\n            const controls = getCtrl(ctx), validate = [], api = this.api;\n            if (!controls.length) return false;\n\n            for (let i = 0; i < controls.length; i++) {\n                const control = controls[i], handleFn = control.handle || ((condition[control.condition || '=='] || condition['=='])(control.value));\n                if (!is.trueArray(control.rule)) continue;\n                const data = {\n                    ...control,\n                    valid: invoke(() => handleFn(ctx.rule.value, api)),\n                    ctrl: findCtrl(ctx, control.rule),\n                    isHidden: is.String(control.rule[0]),\n                };\n                if ((data.valid && data.ctrl) || (!data.valid && !data.ctrl && !data.isHidden)) continue;\n                validate.push(data);\n            }\n            if (!validate.length) return false;\n\n            const hideLst = [];\n            let flag = false;\n            this.deferSyncValue(() => {\n                validate.reverse().forEach(({isHidden, valid, rule, prepend, append, child, ctrl, method}) => {\n                    if (isHidden) {\n                        valid ? ctx.ctrlRule.push({\n                            __ctrl: true,\n                            children: rule,\n                            valid\n                        })\n                            : ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        hideLst[valid ? 'push' : 'unshift'](() => {\n                            if (method === 'disabled') {\n                                this.api.disabled(!valid, rule);\n                            } else if (method === 'display') {\n                                this.api.display(valid, rule);\n                            } else if (method === 'required') {\n                                rule.forEach(item => {\n                                    this.api.setEffect(item, 'required', valid);\n                                })\n                                if(!valid){\n                                    this.api.clearValidateState(rule);\n                                }\n                            } else {\n                                this.api.hidden(!valid, rule);\n                            }\n                        });\n                        return;\n                    }\n                    if (valid) {\n                        flag = true;\n                        const ruleCon = {\n                            type: 'fcFragment',\n                            native: true,\n                            __ctrl: true,\n                            children: rule,\n                        }\n                        ctx.ctrlRule.push(ruleCon);\n                        this.bus.$once('load-start', () => {\n                            // this.cycleLoad = true;\n                            if (prepend) {\n                                api.prepend(ruleCon, prepend, child)\n                            } else if (append || child) {\n                                api.append(ruleCon, append || ctx.id, child)\n                            } else {\n                                ctx.root.splice(ctx.root.indexOf(ctx.origin) + 1, 0, ruleCon);\n                            }\n                        });\n                    } else {\n                        ctx.ctrlRule.splice(ctx.ctrlRule.indexOf(ctrl), 1);\n                        const ctrlCtx = byCtx(ctrl);\n                        ctrlCtx && ctrlCtx.rm();\n                    }\n                });\n            });\n            hideLst.length && this.vm.$nextTick(() => {\n                hideLst.forEach(v => v());\n            });\n            this.vm.$emit('control', ctx.origin, this.api);\n            this.effect(ctx, 'control');\n            return flag;\n        },\n        reloadRule(rules) {\n            return this._reloadRule(rules);\n        },\n        _reloadRule(rules) {\n            // console.warn('%c reload', 'color:red');\n            if (!rules) rules = this.rules;\n\n            const ctxs = {...this.ctxs};\n\n            this.clearNextTick();\n            this.$render.clearOrgChildren();\n            this.initData(rules);\n            this.fc.rules = rules;\n            this.deferSyncValue(() => {\n                this.bus.$once('load-end', () => {\n                    Object.keys(ctxs).filter(id => this.ctxs[id] === undefined)\n                        .forEach(id => this.rmCtx(ctxs[id]));\n                    this.$render.clearCacheAll();\n                });\n                this.reloading = true;\n                this.loadRule();\n                this.reloading = false;\n                this.refresh();\n                this.vm.$emit('reloading', this.api);\n            });\n            this.bus.$off('next-tick', this.nextReload);\n            this.bus.$once('next-tick', this.nextReload);\n            this.vm.$emit('update', this.api);\n        },\n        //todo 组件生成全部通过 alias\n        refresh() {\n            this.vm._refresh();\n        },\n    });\n}\n\nfunction fullRule(rule) {\n    const def = baseRule();\n\n    Object.keys(def).forEach(k => {\n        if (!hasProperty(rule, k)) $set(rule, k, def[k]);\n    });\n    return rule;\n}\n\nfunction getCtrl(ctx) {\n    const control = ctx.rule.control || [];\n    if (is.Object(control)) return [control];\n    else return control;\n}\n\nfunction findCtrl(ctx, rule) {\n    for (let i = 0; i < ctx.ctrlRule.length; i++) {\n        const ctrl = ctx.ctrlRule[i];\n        if (ctrl.children === rule)\n            return ctrl;\n    }\n}\n\nfunction isCtrl(ctx) {\n    return !!ctx.rule.__ctrl;\n}\n","import extend from '@form-create/utils/lib/extend';\nimport {$set} from '@form-create/utils/lib/modify';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\nimport toArray from '@form-create/utils/lib/toarray';\n\nexport default function useInput(Handler) {\n    extend(Handler.prototype, {\n        getValue(ctx) {\n            if (is.Undef(ctx.cacheValue)) {\n                ctx.cacheValue = ctx.parser.toValue(this.getFormData(ctx), ctx);\n            }\n            return ctx.cacheValue;\n        },\n        setValue(ctx, value, formValue, setFlag) {\n            if (ctx.deleted) return;\n            ctx.cacheValue = value;\n            this.changeStatus = true;\n            this.nextRefresh();\n            this.$render.clearCache(ctx);\n            this.setFormData(ctx, formValue);\n            this.syncValue();\n            this.valueChange(ctx, value);\n            this.vm.$emit('change', ctx.field, value, ctx.origin, this.api, setFlag || false);\n            this.effect(ctx, 'value');\n        },\n        onInput(ctx, value) {\n            let val;\n            if (ctx.input && (this.isQuote(ctx, val = ctx.parser.toValue(value, ctx)) || this.isChange(ctx, val))) {\n                this.setValue(ctx, val, value);\n            }\n        },\n        setFormData(ctx, value) {\n            $set(this.formData, ctx.id, value === null ? undefined : value);\n        },\n        getFormData(ctx) {\n            return this.formData[ctx.id];\n        },\n        validate() {\n            toEmpty(this.vm.validate);\n            this.fields().forEach(id => {\n                this.fieldCtx[id].forEach(ctx => {\n                    this.vm.validate[ctx.id] = toArray(ctx.rule.validate);\n                });\n            });\n            return this.vm.validate;\n        },\n        syncForm() {\n            toEmpty(this.form);\n            Object.defineProperties(this.form, this.fields().reduce((initial, field) => {\n                const ctx = this.getFieldCtx(field);\n                const handle = this.valueHandle(ctx);\n                handle.configurable = true;\n                initial[field] = handle;\n                return initial;\n            }, this.options.appendValue ? Object.keys(this.appendData).reduce((initial, field) => {\n                initial[field] = {\n                    enumerable: true,\n                    configurable: true,\n                    get: () => {\n                        return this.appendData[field];\n                    },\n                    set: (val) => {\n                        this.appendData[field] = val;\n                    }\n                }\n                return initial;\n            }, {}) : {}));\n            this.syncValue();\n        },\n        valueHandle(ctx) {\n            return {\n                enumerable: true,\n                get: () => {\n                    return this.getValue(ctx);\n                },\n                set: (value) => {\n                    if (this.isChange(ctx, value)) {\n                        this.setValue(ctx, value, ctx.parser.toFormValue(value, ctx), true);\n                    }\n                }\n            };\n        },\n        appendValue(rule) {\n            if (!rule.field || !hasProperty(this.appendData, rule.field)) return;\n            rule.value = this.appendData[rule.field];\n            delete this.appendData[rule.field];\n        },\n        addSubForm(ctx, subForm) {\n            this.subForm[ctx.id] = subForm;\n        },\n        deferSyncValue(fn, sync) {\n            if (!this.deferSyncFn) {\n                this.deferSyncFn = fn;\n            }\n            if (!this.deferSyncFn.sync) {\n                this.deferSyncFn.sync = sync;\n            }\n            invoke(fn);\n            if (this.deferSyncFn === fn) {\n                this.deferSyncFn = null;\n                if (fn.sync) {\n                    this.syncValue();\n                }\n            }\n        },\n        syncValue() {\n            if (this.deferSyncFn) {\n                return this.deferSyncFn.sync = true;\n            }\n            this.vm._updateValue({...(this.options.appendValue ? this.appendData : {}), ...this.form});\n        },\n        isChange(ctx, value) {\n            return JSON.stringify(ctx.rule.value, strFn) !== JSON.stringify(value === null ? undefined : value, strFn);\n        },\n        isQuote(ctx, value) {\n            return (is.Object(value) || Array.isArray(value)) && value === ctx.rule.value;\n        },\n        refreshUpdate(ctx, val, origin) {\n            if (is.Function(ctx.rule.update)) {\n                const state = invoke(() => ctx.rule.update(val, ctx.origin, this.api, {origin: origin || 'change'}));\n                if (state === undefined) return;\n                ctx.rule.hidden = state === true;\n            }\n        },\n        valueChange(ctx, val) {\n            this.refreshRule(ctx, val);\n            this.bus.$emit('change-' + ctx.field, val);\n        },\n        refreshRule(ctx, val, origin) {\n            if (this.refreshControl(ctx)) {\n                this.$render.clearCacheAll();\n                this.loadRule();\n                this.vm.$emit('update', this.api);\n                this.refresh();\n            }\n            this.refreshUpdate(ctx, val, origin);\n        },\n        appendLink(ctx) {\n            const link = ctx.rule.link;\n            is.trueArray(link) && link.forEach(field => {\n                const fn = () => this.refreshRule(ctx, ctx.rule.value, 'link');\n\n                this.bus.$on('change-' + field, fn);\n                ctx.linkOn.push(() => this.bus.$off('change-' + field, fn));\n            });\n        },\n        fields() {\n            return Object.keys(this.fieldCtx);\n        },\n    });\n}\n\n\nfunction strFn(key, val) {\n    return typeof val === 'function' ? '' + val : val;\n}\n\nfunction toEmpty(obj) {\n    Object.keys(obj).forEach(k => delete obj[k]);\n}\n","const BaseParser = {\n    init(ctx) {\n    },\n    toFormValue(value, ctx) {\n        return value\n    },\n    toValue(formValue, ctx) {\n        return formValue;\n    },\n    mounted(ctx) {\n    },\n    render(children, ctx) {\n        return ctx.$render.defaultRender(ctx, children);\n    },\n    preview(children, ctx) {\n        return this.render(children, ctx);\n    },\n    mergeProp(ctx) {\n    }\n}\n\nexport default BaseParser;\n","import extend from '@form-create/utils/lib/extend';\nimport toCase from '@form-create/utils/lib/tocase';\nimport BaseParser from '../factory/parser';\nimport {$del} from '@form-create/utils/lib/modify';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\nconst noneKey = ['field', 'value', 'vm', 'template', 'name', 'config', 'control', 'inject', 'sync', 'payload', 'optionsTo', 'update', 'component', 'cache'];\n\nexport default function useContext(Handler) {\n    extend(Handler.prototype, {\n        getCtx(id) {\n            return this.getFieldCtx(id) || this.getNameCtx(id)[0] || this.ctxs[id];\n        },\n        getCtxs(id) {\n            return this.fieldCtx[id] || this.nameCtx[id] || (this.ctxs[id] ? [this.ctxs[id]] : []);\n        },\n        setIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            if (!this[field][key]) {\n                this[field][key] = [ctx];\n            } else {\n                this[field][key].push(ctx);\n            }\n        },\n        rmIdCtx(ctx, key, type) {\n            const field = `${type}Ctx`;\n            const lst = this[field][key];\n            if (!lst) return false;\n            const flag = lst.splice(lst.indexOf(ctx) >>> 0, 1).length > 0;\n            if (!lst.length) {\n                delete this[field][key];\n            }\n            return flag;\n        },\n        getFieldCtx(field) {\n            return (this.fieldCtx[field] || [])[0];\n        },\n        getNameCtx(name) {\n            return this.nameCtx[name] || [];\n        },\n        setCtx(ctx) {\n            let {id, field, name, rule} = ctx;\n            this.ctxs[id] = ctx;\n            name && this.setIdCtx(ctx, name, 'name');\n            if (!ctx.input) return;\n            this.setIdCtx(ctx, field, 'field');\n            this.setFormData(ctx, ctx.parser.toFormValue(rule.value, ctx));\n            if (this.isMounted && !this.reloading) {\n                this.vm.$emit('change', ctx.field, rule.value, ctx.origin, this.api);\n            }\n        },\n        getParser(ctx) {\n            const list = this.fc.parsers;\n            return list[ctx.originType] || list[toCase(ctx.type)] || list[ctx.trueType] || BaseParser;\n        },\n        bindParser(ctx) {\n            ctx.setParser(this.getParser(ctx));\n        },\n        getType(alias) {\n            const map = this.fc.CreateNode.aliasMap;\n            const type = map[alias] || map[toCase(alias)] || alias;\n            return toCase(type);\n        },\n        noWatch(fn) {\n            if (!this.noWatchFn) {\n                this.noWatchFn = fn;\n            }\n            invoke(fn);\n            if (this.noWatchFn === fn) {\n                this.noWatchFn = null;\n            }\n        },\n        watchCtx(ctx) {\n            const vm = this.vm;\n            Object.keys(ctx.rule).filter(k => k[0] !== '_' && k[0] !== '$' && noneKey.indexOf(k) === -1).forEach((key) => {\n                const flag = key === 'children';\n                ctx.watch.push(vm.$watch(() => ctx.rule[key], (n, o) => {\n                    if (this.loading || this.noWatchFn || this.reloading) return;\n                    if (flag && ctx.parser.loadChildren === false) {\n                        this.$render.clearCache(ctx);\n                        this.nextRefresh();\n                        return;\n                    }\n                    this.watching = true;\n                    // if (key === 'hidden')\n                    //     ctx.updateKey(true);\n                    // else\n                    if (key === 'link') {\n                        ctx.link();\n                        return;\n                    } else if (['props', 'on', 'nativeOn', 'deep'].indexOf(key) > -1) {\n                        this.parseInjectEvent(ctx.rule, n || {});\n                        if (key === 'props' && ctx.input) {\n                            this.setFormData(ctx, ctx.parser.toFormValue(ctx.rule.value, ctx));\n                        }\n                    } else if (['emit', 'nativeEmit'].indexOf(key) > -1)\n                        this.parseEmit(ctx, key === 'emit');\n                    else if (['prefix', 'suffix'].indexOf(key) > -1)\n                        n && this.loadFn(n, ctx.rule);\n                    else if (key === 'type') {\n                        ctx.updateType();\n                        this.bindParser(ctx);\n                    } else if (key === 'children') {\n                        const flag = is.trueArray(n);\n                        this.deferSyncValue(() => {\n                            if (n !== o) {\n                                this.rmSub(o, ctx);\n                                this.$render.initOrgChildren();\n                            }\n                            flag && this.loadChildren(n, ctx);\n                            this.vm.$emit('update', this.api);\n                        });\n                    }\n                    this.$render.clearCache(ctx);\n                    this.refresh();\n                    this.watching = false;\n                }, {deep: !flag, sync: flag}));\n            });\n            this.watchEffect(ctx);\n        },\n        rmSub(sub, ctx) {\n            is.trueArray(sub) && sub.forEach(r => {\n                r && r.__fc__ && r.__fc__.parent === ctx && this.rmCtx(r.__fc__);\n            })\n        },\n        rmCtx(ctx) {\n            if (ctx.deleted) return;\n            const {id, field, input, name} = ctx;\n            if (ctx.input) {\n                Object.defineProperty(ctx.rule, 'value', {\n                    value: ctx.rule.value,\n                    writable: true\n                });\n            }\n\n            $del(this.ctxs, id);\n            $del(this.$render.tempList, id);\n            $del(this.$render.orgChildren, id);\n            $del(this.vm.ctxInject, id);\n            $del(this.formData, id);\n            $del(this.subForm, id);\n            $del(ctx, 'cacheValue');\n\n            input && this.rmIdCtx(ctx, field, 'field');\n            name && this.rmIdCtx(ctx, name, 'name');\n\n            if (input && !hasProperty(this.fieldCtx, field)) {\n                $del(this.form, field);\n            }\n\n            this.deferSyncValue(() => {\n                if (!this.reloading) {\n                    if (ctx.parser.loadChildren !== false) {\n                        if (is.trueArray(ctx.rule.children)) {\n                            ctx.rule.children.forEach(h => h.__fc__ && this.rmCtx(h.__fc__));\n                        }\n                    }\n                    if (ctx.root === this.rules) {\n                        this.vm._renderRule();\n                    }\n                }\n            }, input);\n\n            const index = this.sort.indexOf(id);\n            if (index > -1) {\n                this.sort.splice(index, 1);\n            }\n\n            this.$render.clearCache(ctx);\n            ctx.delete();\n            this.effect(ctx, 'deleted');\n            input && !this.fieldCtx[field] && this.vm.$emit('removeField', field, ctx.rule, this.api);\n            ctx.rule.__ctrl || this.vm.$emit('removeRule', ctx.rule, this.api);\n            return ctx;\n        },\n    })\n}\n","import Api from '../frame/api';\nimport Render from '../render';\nimport extend from '@form-create/utils/lib/extend';\nimport {funcProxy} from '../frame/util';\nimport useInject from './inject';\nimport usePage from './page';\nimport useRender from './render';\nimport useLoader from './loader';\nimport useInput from './input';\nimport useContext from './context';\nimport useLifecycle from './lifecycle';\nimport useEffect from './effect';\n\n\nexport default function Handler(fc) {\n    extend(this, {\n        fc,\n        vm: fc.vm,\n        watching: false,\n        loading: false,\n        reloading: false,\n        noWatchFn: null,\n        deferSyncFn: null,\n        isMounted: false,\n        formData: {},\n        subForm: {},\n        form: {},\n        appendData: {},\n        providers: {},\n        cycleLoad: null,\n        loadedId: 1,\n        nextTick: null,\n        changeStatus: false,\n        pageEnd: true,\n        nextReload: () => {\n            this.lifecycle('reload');\n        }\n    });\n\n    funcProxy(this, {\n        options() {\n            return fc.options;\n        },\n        bus() {\n            return fc.bus;\n        },\n    })\n\n    this.initData(fc.rules);\n\n    this.$manager = new fc.manager(this);\n    this.$render = new Render(this);\n    this.api = fc.extendApi(Api(this), this);\n}\n\nextend(Handler.prototype, {\n    initData(rules) {\n        extend(this, {\n            ctxs: {},\n            fieldCtx: {},\n            nameCtx: {},\n            sort: [],\n            rules,\n        });\n    },\n    init() {\n        this.appendData = {...this.fc.options.formData || {}, ...this.vm.value || {}, ...this.appendData};\n        this.useProvider();\n        this.usePage();\n        this.loadRule();\n        this.$manager.__init();\n        this.vm.$set(this.vm, 'formData', this.formData);\n    },\n})\n\nuseInject(Handler);\nusePage(Handler);\nuseRender(Handler);\nuseLoader(Handler);\nuseInput(Handler);\nuseContext(Handler);\nuseLifecycle(Handler);\nuseEffect(Handler);\n","// https://github.com/ElemeFE/element/blob/dev/packages/upload/src/ajax.js\n\nfunction getError(action, option, xhr) {\n    const msg = `fail to ${action} ${xhr.status}'`;\n    const err = new Error(msg);\n    err.status = xhr.status;\n    err.url = action;\n    return err;\n}\n\nfunction getBody(xhr) {\n    const text = xhr.responseText || xhr.response;\n    if (!text) {\n        return text;\n    }\n\n    try {\n        return JSON.parse(text);\n    } catch (e) {\n        return text;\n    }\n}\n\nexport default function fetch(option) {\n    if (typeof XMLHttpRequest === 'undefined') {\n        return;\n    }\n\n    const xhr = new XMLHttpRequest();\n    const action = option.action;\n\n    xhr.onerror = function error(e) {\n        option.onError(e);\n    };\n\n    xhr.onload = function onload() {\n        if (xhr.status < 200 || xhr.status >= 300) {\n            return option.onError(getError(action, option, xhr), getBody(xhr));\n        }\n\n        option.onSuccess(getBody(xhr));\n    };\n\n    xhr.open(option.method || 'get', action, true);\n\n    let formData;\n    if (option.data) {\n        if ((option.dataType || '').toLowerCase() !== 'json') {\n            formData = new FormData();\n            Object.keys(option.data).map(key => {\n                formData.append(key, option.data[key]);\n            });\n        } else {\n            formData = JSON.stringify(option.data);\n            xhr.setRequestHeader('content-type', 'application/json');\n        }\n    }\n\n\n    if (option.withCredentials && 'withCredentials' in xhr) {\n        xhr.withCredentials = true;\n    }\n\n    const headers = option.headers || {};\n\n    Object.keys(headers).forEach(item => {\n        if (headers[item] !== null) {\n            xhr.setRequestHeader(item, headers[item]);\n        }\n    });\n    xhr.send(formData);\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport toLine from '@form-create/utils/lib/toline';\nimport {parseFn} from '../frame/util';\n\n\nexport default function useInject(Handler) {\n    extend(Handler.prototype, {\n        parseInjectEvent(rule, on) {\n            const inject = rule.inject || this.options.injectEvent;\n            return this.parseEventLst(rule, on, inject);\n        },\n        parseEventLst(rule, data, inject, deep) {\n            Object.keys(data).forEach(k => {\n                const fn = this.parseEvent(rule, data[k], inject, deep);\n                if (fn) {\n                    data[k] = fn;\n                }\n            });\n            return data;\n        },\n        parseEvent(rule, fn, inject, deep) {\n            if (is.Function(fn) && ((inject !== false && !is.Undef(inject)) || fn.__inject)) {\n                return this.inject(rule, fn, inject)\n            } else if (!deep && Array.isArray(fn) && fn[0] && (is.String(fn[0]) || is.Function(fn[0]))) {\n                return this.parseEventLst(rule, fn, inject, true);\n            } else if (is.String(fn)) {\n                const val = parseFn(fn);\n                if (val && fn !== val) {\n                    return val.__inject ? this.parseEvent(rule, val, inject, true) : val;\n                }\n            }\n        },\n        parseEmit(ctx, on) {\n            let event = {}, rule = ctx.rule, {emitPrefix, field, name, inject} = rule;\n            let emit = rule[on ? 'emit' : 'nativeEmit'] || [];\n            if (is.trueArray(emit)) {\n                let emitKey = emitPrefix || field || name;\n                if (emitKey) {\n                    if (!on) emitKey = `native-${emitKey}`;\n                    emit.forEach(eventName => {\n                        if (!eventName) return;\n                        let eventInject;\n                        if (is.Object(eventName)) {\n                            eventInject = eventName.inject;\n                            eventName = eventName.name;\n                        }\n                        const fieldKey = toLine(`${emitKey}-${eventName}`);\n                        const fn = (...arg) => {\n                            this.vm.$emit(fieldKey, ...arg);\n                            this.vm.$emit('emit-event', fieldKey, ...arg);\n                        };\n                        fn.__emit = true;\n\n                        if (!eventInject && inject === false) {\n                            event[eventName] = fn;\n                        } else {\n                            let _inject = eventInject || inject || this.options.injectEvent;\n                            event[eventName] = is.Undef(_inject) ? fn : this.inject(rule, fn, _inject);\n                        }\n                    });\n                }\n\n            }\n            ctx.computed[on ? 'on' : 'nativeOn'] = event;\n            return event;\n        },\n        getInjectData(self, inject) {\n            const {option, rule} = this.vm.$options.propsData;\n            return {\n                api: this.api,\n                $f: this.api,\n                rule,\n                self: self.__origin__,\n                option,\n                inject\n            };\n        },\n        inject(self, _fn, inject) {\n            if (_fn.__origin) {\n                if (this.watching && !this.loading)\n                    return _fn;\n                _fn = _fn.__origin;\n            }\n\n            const h = this;\n\n            const fn = function (...args) {\n                const data = h.getInjectData(self, inject);\n                data.args = [...args];\n                args.unshift(data);\n                return _fn.apply(this, args);\n            };\n            fn.__origin = _fn;\n            fn.__json = _fn.__json;\n            return fn;\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\n\n\nexport default function useRender(Handler) {\n    extend(Handler.prototype, {\n        clearNextTick() {\n            this.nextTick && clearTimeout(this.nextTick);\n            this.nextTick = null;\n        },\n        bindNextTick(fn) {\n            this.clearNextTick();\n            this.nextTick = setTimeout(() => {\n                fn()\n                this.nextTick = null;\n            }, 10);\n        },\n        render() {\n            // console.warn('%c render', 'color:green');\n            ++this.loadedId;\n\n            if (this.vm.unique > 0)\n                return this.$render.render();\n            else {\n                this.vm.unique = 1;\n                return [];\n            }\n        },\n    });\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is from '@form-create/utils/lib/type';\nimport {invoke} from '../frame/util';\n\n\nexport default function useLifecycle(Handler) {\n    extend(Handler.prototype, {\n        mounted() {\n            const _mounted = () => {\n                this.isMounted = true;\n                this.lifecycle('mounted');\n            }\n            if (this.pageEnd) {\n                _mounted();\n            } else {\n                this.bus.$once('page-end', _mounted);\n            }\n        },\n        lifecycle(name) {\n            const fn = this.options[name];\n            is.Function(fn) && invoke(() => fn(this.api));\n            this.vm.$emit(name, this.api);\n        },\n    })\n}\n","import extend from '@form-create/utils/lib/extend';\nimport is, {hasProperty} from '@form-create/utils/lib/type';\nimport {mergeRule} from '../frame/util';\n\n\nexport default function useEffect(Handler) {\n    extend(Handler.prototype, {\n        useProvider() {\n            const ps = this.fc.providers;\n            Object.keys(ps).forEach(k => {\n                let prop = ps[k];\n                if (is.Function(prop)) {\n                    prop = prop(this.fc);\n                }\n                prop._c = getComponent(prop);\n                this.onEffect(prop);\n                this.providers[k] = prop;\n            });\n        },\n        onEffect(provider) {\n            const used = [];\n            (provider._c || ['*']).forEach(name => {\n                const type = name === '*' ? '*' : this.getType(name);\n                if (used.indexOf(type) > -1) return;\n                used.push(type);\n                this.bus.$on(`p:${provider.name}:${type}:${provider.input ? 1 : 0}`, (event, args) => {\n                    provider[event] && provider[event](...args);\n                });\n            });\n            provider._used = used;\n        },\n        watchEffect(ctx) {\n            const vm = this.vm;\n            let effect = {\n                required: () => {\n                    return (hasProperty(ctx.rule, '$required') ? ctx.rule['$required'] : ctx.rule?.effect?.required) || false;\n                }\n            };\n            Object.keys(ctx.rule.effect || {}).forEach(k => {\n                effect[k] = () => ctx.rule.effect[k];\n            })\n            Object.keys(ctx.rule).forEach(k => {\n                if (k[0] === '$') {\n                    effect[k.substr(1)] = () => ctx.rule[k];\n                }\n            })\n            Object.keys(effect || {}).forEach(k => {\n                ctx.watch.push(vm.$watch(effect[k], (n) => {\n                    this.effect(ctx, 'watch', {[k]: n});\n                }, {deep: true}));\n            });\n        },\n        ruleEffect(rule, event, append) {\n            this.emitEffect({\n                rule,\n                input: !!rule.field,\n                type: this.getType(rule.type)\n            }, event, append);\n        },\n        effect(ctx, event, custom) {\n            this.emitEffect({\n                rule: ctx.rule,\n                input: ctx.input,\n                type: ctx.trueType,\n                ctx,\n                custom\n            }, event);\n        },\n        getEffect(rule, name) {\n            if (hasProperty(rule, '$' + name)) {\n                return rule['$' + name];\n            }\n            if (hasProperty(rule, 'effect') && hasProperty(rule.effect, name))\n                return rule.effect[name];\n            return undefined;\n        },\n        emitEffect({ctx, rule, input, type, custom}, event, append) {\n            if (!type || type === 'fcFragment') return;\n            const effect = custom ? custom : (Object.keys(rule).reduce((i, k) => {\n                if (k[0] === '$') {\n                    i[k.substr(1)] = rule[k];\n                }\n                return i;\n            }, {...rule.effect || {}}));\n            Object.keys(effect).forEach(attr => {\n                const p = this.providers[attr];\n                if (!p || (p.input && !input)) return;\n                let _type;\n                if (!p._c) {\n                    _type = '*';\n                } else if (p._used.indexOf(type) > -1) {\n                    _type = type;\n                } else {\n                    return;\n                }\n                const data = {value: effect[attr], getValue: () => this.getEffect(rule, attr), ...(append || {})};\n                if (ctx) {\n                    data.getProp = () => ctx.effectData(attr);\n                    data.clearProp = () => ctx.clearEffectData(attr);\n                    data.mergeProp = (prop) => mergeRule(data.getProp(), [prop]);\n                    data.id = ctx.id;\n                }\n                this.bus.$emit(`p:${attr}:${_type}:${p.input ? 1 : 0}`, event, [data, rule, this.api]);\n            });\n        }\n    });\n}\n\nfunction unique(arr) {\n    return arr.filter(function (item, index, arr) {\n        return arr.indexOf(item, 0) === index;\n    });\n}\n\nfunction getComponent(p) {\n    const c = p.components;\n    if (Array.isArray(c)) {\n        const arr = unique(c.filter(v => v !== '*'));\n        return arr.length ? arr : false;\n    } else if (is.String(c)) return [c];\n    else return false;\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: ['vnode'],\n    render(h, ctx) {\n        return ctx.props.vnode ? ctx.props.vnode : ctx.children\n    }\n}\n","import toLine from '@form-create/utils/lib/toline';\nimport is from '@form-create/utils/lib/type';\nimport toString from '@form-create/utils/lib/tostring';\nimport extend from '@form-create/utils/lib/extend';\nimport Vue from 'vue';\n\nfunction parseProp(prop) {\n    if (is.String(prop))\n        return {domProps: {innerHTML: prop}};\n    return prop;\n}\n\nexport function CreateNodeFactory() {\n\n    const aliasMap = {};\n\n    function CreateNode(vm) {\n        vm && this.setVm(vm);\n    }\n\n    extend(CreateNode.prototype, {\n        setVm(vm) {\n            this.vm = vm;\n            this.$h = vm.$createElement;\n        },\n        make(tag, data, children) {\n            if (Vue.config.isReservedTag(tag) && data.nativeOn) delete data.nativeOn;\n            return this.makeComponent(tag, data, children);\n        },\n        makeComponent(type, data, children) {\n            let Node = this.$h(type, parseProp(data), children || []);\n            Node.context = this.vm;\n            return Node;\n        },\n        aliasMap\n    });\n\n    extend(CreateNode, {\n        aliasMap,\n        alias(alias, name) {\n            aliasMap[alias] = name;\n        },\n        use(nodes) {\n            Object.keys(nodes).forEach((k) => {\n                const line = toLine(k);\n                const lower = toString(k).toLocaleLowerCase();\n                const v = nodes[k];\n                [k, line, lower].forEach(n => {\n                    CreateNode.alias(k, v);\n                    CreateNode.prototype[n] = function (data, children) {\n                        return this.make(v, data, children);\n                    };\n                });\n            });\n        }\n    })\n\n    return CreateNode;\n}\n","export default function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n","import mergeProps from '@form-create/utils/lib/mergeprops';\nimport unique from '@form-create/utils/lib/unique';\nimport extend from '@form-create/utils/lib/extend';\n\nexport function createManager(proto) {\n    class CustomManager extends Manager {\n    }\n\n    Object.assign(CustomManager.prototype, proto);\n    return CustomManager;\n}\n\nexport default function Manager(handler) {\n    extend(this, {\n        $handle: handler,\n        vm: handler.vm,\n        options: {},\n        ref: 'fcForm',\n        mergeOptionsRule: {\n            normal: ['form', 'row', 'info', 'submitBtn', 'resetBtn']\n        }\n    });\n    this.updateKey();\n    this.init();\n}\n\nextend(Manager.prototype, {\n    __init() {\n        this.$render = this.$handle.$render;\n        this.$r = (...args) => this.$render.renderRule(...args);\n    },\n    updateKey() {\n        this.key = unique();\n    },\n    //TODO interface\n    init() {\n    },\n    update() {\n    },\n    beforeRender() {\n    },\n    form() {\n        return this.vm.$refs[this.ref];\n    },\n    getSlot(name){\n        const _fn = (vm) => {\n            if (vm) {\n                let slot = vm.$scopedSlots[name];\n                if (slot) {\n                    return slot;\n                }\n                return _fn(vm.$pfc);\n            }\n            return undefined;\n        }\n        return _fn(this.vm);\n    },\n\n    mergeOptions(args, opt) {\n        return mergeProps(args.map(v => this.tidyOptions(v)), opt, this.mergeOptionsRule);\n    },\n    updateOptions(options) {\n        this.options = this.mergeOptions([options], this.getDefaultOptions());\n        this.update();\n    },\n    tidyOptions(options) {\n        return options;\n    },\n    tidyRule(ctx) {\n    },\n    mergeProp(ctx) {\n    },\n    getDefaultOptions() {\n        return {};\n    },\n    render(children) {\n    }\n})\n","import {err} from '@form-create/utils/lib/console';\nimport {byCtx, invoke} from './util';\nimport is from '@form-create/utils/lib/type';\nimport deepSet from '@form-create/utils/lib/deepset';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport toArray from '@form-create/utils/lib/toarray';\n\nconst loadData = function (fc) {\n    const loadData = {\n        name: 'loadData',\n        _fn: [],\n        created(inject, rule, api) {\n            this.deleted(inject);\n            let attrs = toArray(inject.getValue());\n            const events = [];\n            attrs.forEach(attr => {\n                if (attr) {\n                    const on = () => {\n                        if (attr.watch !== false) {\n                            fc.bus.$off('p.loadData.' + attr.attr, on);\n                            fc.bus.$once('p.loadData.' + attr.attr, on);\n                        }\n                        let value = undefined;\n                        if (attr.attr) {\n                            value = fc.loadData[attr.attr] || attr.default;\n                            if (attr.copy) {\n                                value = deepCopy(value)\n                            }\n                        }\n                        deepSet(inject.getProp(), attr.to || 'options', value);\n                        api.sync(rule);\n                    }\n                    events.push(() => fc.bus.$off('p.loadData.' + attr.attr, on));\n                    on();\n                }\n            })\n            this._fn[inject.id] = events;\n        },\n        deleted(inject) {\n            if (this._fn[inject.id]) {\n                this._fn[inject.id].forEach(un => {\n                    un();\n                })\n                delete this._fn[inject.id];\n            }\n            inject.clearProp();\n        },\n    };\n    loadData.watch = loadData.created;\n    return loadData;\n}\n\nconst componentValidate = {\n    name: 'componentValidate',\n    load(attr, rule, api) {\n        const method = attr.getValue();\n        if (!method) {\n            attr.clearProp();\n            api.clearValidateState([rule.field]);\n        } else {\n            attr.getProp().validate = [{\n                validator(...args) {\n                    const ctx = byCtx(rule);\n                    if (ctx) {\n                        return api.exec(ctx.id, method === true ? 'formCreateValidate' : method, ...args, {\n                            attr,\n                            rule,\n                            api\n                        });\n                    }\n                }\n            }];\n        }\n    },\n    watch(...args) {\n        componentValidate.load(...args);\n    }\n};\n\nconst fetch = function (fc) {\n\n    function parseOpt(option) {\n        if (is.String(option)) {\n            option = {\n                action: option,\n                to: 'options'\n            }\n        }\n        return option;\n    }\n\n    function run(inject, rule, api) {\n        let option = inject.value;\n        const set = (val) => {\n            if (val === undefined) {\n                inject.clearProp();\n                api.sync(rule);\n            } else {\n                deepSet(inject.getProp(), option.to || 'options', val);\n            }\n        }\n        if (is.Function(option)) {\n            option = option(rule, api);\n\n        }\n        option = parseOpt(option);\n        if (!option || !option.action) {\n            set(undefined);\n            return;\n        }\n        if (!option.to) {\n            option.to = 'options';\n        }\n        const onError = option.onError;\n\n        const check = () => {\n            if (!inject.getValue()) {\n                inject.clearProp();\n                api.sync(rule);\n                return true;\n            }\n        }\n\n        const config = {\n            headers: {},\n            ...option,\n            onSuccess(body, flag) {\n                if (check()) return;\n                let fn = (v) => flag ? v : v.data;\n                if (is.Function(option.parse)) {\n                    fn = option.parse;\n                } else if (option.parse && is.String(option.parse)) {\n                    fn = (v) => {\n                        option.parse.split('.').forEach(k => {\n                            if (v) {\n                                v = v[k];\n                            }\n                        })\n                        return v;\n                    }\n                }\n                set(fn(body, rule, api))\n                api.sync(rule);\n            },\n            onError(e) {\n                set(undefined)\n                if (check()) return;\n                (onError || ((e) => err(e.message || 'fetch fail ' + option.action)))(e, rule, api);\n            }\n        };\n        fc.options.beforeFetch && invoke(() => fc.options.beforeFetch(config, {rule, api}));\n        if (is.Function(option.action)) {\n            option.action(rule, api).then((val) => {\n                config.onSuccess(val, true);\n            }).catch((e) => {\n                config.onError(e);\n            });\n            return;\n        }\n        invoke(() => fc.create.fetch(config, {inject, rule, api}));\n    }\n\n    return {\n        name: 'fetch',\n        loaded(...args) {\n            run(...args);\n        },\n        watch(...args) {\n            run(...args);\n        },\n    };\n}\n\n\nconst $required = {\n    name: 'required',\n    load(inject, rule, api) {\n        const val = parseVal(inject.getValue());\n        if (val.required === false) {\n            inject.clearProp();\n        } else {\n            const validate = {\n                required: true,\n                validator(_, v, call) {\n                    is.empty(v) ? call(validate.message) : call();\n                },\n                ...val,\n            };\n            if (!validate.message) {\n                let title = rule.title || '';\n                validate.message = ((typeof title === 'object' ? title.title : title) || '') + '不能为空';\n            }\n            inject.getProp().validate = [validate];\n        }\n        api.sync(rule);\n    },\n    watch(...args) {\n        $required.load(...args);\n    }\n}\n\nfunction parseVal(val) {\n    if (is.Boolean(val)) {\n        return {required: val}\n    } else if (is.String(val)) {\n        return {message: val};\n    } else if (is.Undef(val)) {\n        return {required: false};\n    } else if (is.Function(val)) {\n        return {validator: val};\n    } else if (!is.Object(val)) {\n        return {};\n    } else {\n        return val;\n    }\n}\n\nexport default {\n    fetch,\n    loadData,\n    required: $required,\n    componentValidate,\n};\n","import is from '@form-create/utils/lib/type';\n\nconst name = 'html';\n\nexport default {\n    name,\n    loadChildren: false,\n    render(children, ctx) {\n        if (!ctx.prop.domProps) ctx.prop.domProps = {};\n        ctx.prop.domProps.innerHTML = children;\n        return ctx.vNode.make(ctx.prop.props.tag || 'div', ctx.prop);\n    },\n    renderChildren(ctx) {\n        if (Array.isArray(ctx.rule.children)) {\n            return ctx.rule.children.filter(v => is.String(v)).join('');\n        }\n        return '';\n    }\n}\n","import $FormCreate from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from '../handler';\nimport fetch from './fetch';\nimport {creatorFactory} from '..';\nimport BaseParser from '../factory/parser';\nimport {copyRule, copyRules, mergeGlobal, parseJson, toJson, parseFn} from './util';\nimport fragment from '../components/fragment';\nimport is from '@form-create/utils/lib/type';\nimport toCase from '@form-create/utils/lib/tocase';\nimport extend from '@form-create/utils/lib/extend';\nimport {CreateNodeFactory} from '../factory/node';\nimport {createManager} from '../factory/manager';\nimport {arrayAttrs, keyAttrs, normalAttrs} from './attrs';\nimport {appendProto} from '../factory/creator';\nimport $provider from './provider';\nimport {deepCopy} from '@form-create/utils/lib/deepextend';\nimport html from '../parser/html';\nimport uniqueId from '@form-create/utils/lib/unique';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nfunction _parseProp(name, id) {\n    let prop;\n    if (arguments.length === 2) {\n        prop = arguments[1];\n        id = prop[name];\n    } else {\n        prop = arguments[2];\n    }\n    return {id, prop};\n}\n\nfunction nameProp() {\n    return _parseProp('name', ...arguments);\n}\n\nfunction _getEl(options) {\n    if (!options || !options.el) return window.document.body;\n    return is.Element(options.el)\n        ? options.el\n        : document.querySelector(options.el);\n}\n\nfunction mountForm(rules, option) {\n    const $vm = new _vue({\n        data() {\n            //todo 外部无法修改\n            return {rule: rules, option: option || {}};\n        },\n        render(h) {\n            return h('FormCreate', {ref: 'fc', props: this.$data});\n        }\n    });\n    $vm.$mount();\n    return $vm;\n}\n\nfunction exportAttrs(attrs) {\n    const key = attrs.key || [];\n    const array = attrs.array || [];\n    const normal = attrs.normal || [];\n    keyAttrs.push(...key);\n    arrayAttrs.push(...array);\n    normalAttrs.push(...normal);\n\n    appendProto([...key, ...array, ...normal]);\n}\n\nlet id = 1;\nconst instance = {};\n\n//todo 表单嵌套\nexport default function FormCreateFactory(config) {\n\n    const components = {\n        [fragment.name]: fragment\n    };\n    const parsers = {};\n    const directives = {};\n    const providers = {\n        ...$provider\n    };\n    const maker = makerFactory();\n    let globalConfig = {global: {}};\n    const loadData = {};\n    const CreateNode = CreateNodeFactory();\n\n    exportAttrs(config.attrs || {});\n\n    function getApi(name) {\n        const val = instance[name];\n        if (Array.isArray(val)) {\n            return val.map(v => {\n                return v.api();\n            });\n        } else if (val) {\n            return val.api();\n        }\n    }\n\n    function directive() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) directives[data.id] = data.prop;\n    }\n\n    function register() {\n        const data = nameProp(...arguments);\n        if (data.id && data.prop) providers[data.id] = {...data.prop, name: data.id};\n    }\n\n    function componentAlias(alias) {\n        CreateNode.use(alias);\n    }\n\n    function parser() {\n        const data = nameProp(...arguments);\n        if (!data.id || !data.prop) return BaseParser;\n        const name = toCase(data.id);\n        const parser = data.prop;\n        const base = parser.merge === true ? parsers[name] : undefined;\n        parsers[name] = parser;\n        Object.setPrototypeOf(parser, base || BaseParser);\n        maker[name] = creatorFactory(name);\n        parser.maker && extend(maker, parser.maker);\n    }\n\n    function component(id, component) {\n        let name;\n        if (is.String(id)) {\n            name = toCase(id);\n            if (['form-create', 'formcreate'].indexOf(name) > -1) {\n                return $form();\n            } else if (component === undefined) {\n                return components[name];\n            }\n        } else {\n            name = toCase(id.name);\n            component = id;\n        }\n        if (!name || !component) return;\n        components[name] = component;\n        delete CreateNode.aliasMap[name];\n        delete parsers[name];\n        if (component.formCreateParser) parser(name, component.formCreateParser);\n    }\n\n    function _emitData(id) {\n        Object.keys(instance).forEach(v => {\n            const apis = Array.isArray(instance[v]) ? instance[v] : [instance[v]];\n            apis.forEach(that => {\n                that.bus.$emit('p.loadData.' + id);\n            })\n        })\n    }\n\n    function setData(id, data) {\n        loadData[id] = data;\n        _emitData(id);\n    }\n\n    function removeData(id) {\n        delete loadData[id];\n        _emitData(id);\n    }\n\n    function $form() {\n        return _vue.extend($FormCreate(FormCreate));\n    }\n\n    function $vnode() {\n        return _vue.extend(fragment);\n    }\n\n    //todo 检查回调函数作用域\n    function use(fn, opt) {\n        if (is.Function(fn.install)) fn.install(create, opt);\n        else if (is.Function(fn)) fn(create, opt);\n        return this;\n    }\n\n    function create(rules, _opt, parent) {\n        let $vm = mountForm(rules, _opt || {});\n        const _this = $vm.$refs.fc.formCreate;\n        _this.$parent = parent;\n        _getEl(_this.options).appendChild($vm.$el);\n        return _this.api();\n    }\n\n    function factory(inherit) {\n        let _config = {...config};\n        if (inherit) {\n            _config.inherit = {\n                components,\n                parsers,\n                directives,\n                providers,\n                maker,\n                loadData\n            }\n        } else {\n            delete _config.inherit;\n        }\n        return FormCreateFactory(_config);\n    }\n\n    function FormCreate(vm) {\n        const rules = vm.$options.propsData.rule;\n        extend(this, {\n            id: id++,\n            vm,\n            create,\n            manager: createManager(config.manager),\n            parsers,\n            providers,\n            rules: Array.isArray(rules) ? rules : [],\n            name: vm.$options.propsData.name || uniqueId(),\n            inFor: vm.$options.propsData.inFor,\n            prop: {\n                components,\n                directives,\n            },\n            loadData,\n            CreateNode,\n            bus: new _vue,\n            unwatch: null,\n            options: {},\n            extendApi: config.extendApi || (api => api)\n        })\n        this.init();\n        this.initOptions();\n        if (this.name) {\n            if (this.inFor) {\n                if (!instance[this.name]) instance[this.name] = [];\n                instance[this.name].push(this);\n            } else {\n                instance[this.name] = this;\n            }\n        }\n    }\n\n    extend(FormCreate.prototype, {\n        init() {\n            const vm = this.vm;\n            const h = new Handle(this);\n            this.$handle = h;\n            vm.$f = h.api;\n            vm.$emit('input', h.api);\n\n            vm.$on('hook:created', () => {\n                if (this.isSub()) {\n                    this.unwatch = vm.$watch(() => vm.$pfc.option, () => {\n                        this.initOptions();\n                        vm.$f.refresh();\n                    }, {deep: true});\n                    this.initOptions();\n                }\n                this.created();\n                vm.disabled && vm.$f.disabled(true)\n            })\n            vm.$on('hook:mounted', () => {\n                this.mounted();\n            });\n            vm.$on('hook:beforeDestroy', () => {\n                vm.destroyed = true;\n                this.unwatch && this.unwatch();\n                h.reloadRule([]);\n                if (this.name) {\n                    if (this.inFor) {\n                        const idx = instance[this.name].indexOf(this);\n                        instance[this.name].splice(idx, 1);\n                        if(!instance[this.name].length){\n                            delete instance[this.name];\n                        }\n                    } else {\n                        delete instance[this.name];\n                    }\n                }\n            });\n            vm.$on('hook:updated', () => {\n                h.bindNextTick(() => this.bus.$emit('next-tick', h.api));\n            });\n        },\n        isSub() {\n            return this.vm.$pfc && this.vm.extendOption;\n        },\n        initOptions() {\n            this.options = {};\n            let options  = {formData: {}, submitBtn: {}, resetBtn: {}, ...deepCopy(globalConfig)};\n            if (this.isSub()) {\n                this.mergeOptions(this.options, this.vm.$pfc.$f.config || {}, true);\n            }\n            options = this.mergeOptions(options, this.vm.$options.propsData.option);\n            this.updateOptions(options);\n        },\n        mergeOptions(target, opt, parent) {\n            opt = deepCopy(opt);\n            parent && ['page', 'onSubmit', 'mounted', 'reload', 'formData', 'el'].forEach((n) => {\n                delete opt[n];\n            });\n            if (opt.global) {\n                target.global = mergeGlobal(target.global, opt.global);\n                delete opt.global;\n            }\n            this.$handle.$manager.mergeOptions([opt], target);\n            return target;\n        },\n        updateOptions(options) {\n            this.mergeOptions(this.options, options);\n            this.$handle.$manager.updateOptions(this.options);\n        },\n        created() {\n            this.$handle.init();\n            this.vm.$emit('created', this.api());\n        },\n        api() {\n            return this.$handle.api;\n        },\n        render() {\n            return this.$handle.render();\n        },\n        mounted() {\n            this.$handle.mounted();\n        },\n    })\n\n\n    function useAttr(formCreate) {\n        extend(formCreate, {\n            version: config.version,\n            ui: config.ui,\n            setData,\n            removeData,\n            maker,\n            component,\n            directive,\n            register,\n            $vnode,\n            parser,\n            use,\n            factory,\n            componentAlias,\n            copyRule,\n            copyRules,\n            fetch,\n            $form,\n            parseFn,\n            parseJson,\n            toJson,\n            getApi,\n            init(rules, _opt = {}) {\n                let $vm = mountForm(rules, _opt), _this = $vm.$refs.fc.formCreate;\n                return {\n                    mount($el) {\n                        if ($el && is.Element($el))\n                            _this.options.el = $el;\n                        _getEl(_this.options).appendChild($vm.$el);\n                        return _this.api();\n                    },\n                    remove() {\n                        $vm.$el.parentNode && $vm.$el.parentNode.removeChild($vm.$el);\n                    },\n                    destroy() {\n                        this.remove();\n                        $vm.$destroy();\n                    },\n                    $f: _this.api()\n                };\n            }\n        });\n    }\n\n    function useStatic(formCreate) {\n        extend(formCreate, {\n            create,\n            install(Vue, options) {\n                globalConfig = {...globalConfig, ...(options || {})}\n                if (Vue._installedFormCreate === true) return;\n                Vue._installedFormCreate = true;\n                _vue = Vue;\n\n                const $formCreate = function (rules, opt = {}) {\n                    return create(rules, opt, this);\n                };\n\n                useAttr($formCreate);\n\n                Vue.prototype.$formCreate = $formCreate;\n                Vue.component('FormCreate', $form());\n                Vue.component('FcFragment', $vnode());\n            }\n        })\n    }\n\n    useAttr(create);\n    useStatic(create);\n\n    CreateNode.use({fragment: 'fcFragment'});\n\n    parser(html);\n\n    if (config.install) create.use(config);\n\n    if (config.inherit) {\n        const inherit = config.inherit;\n        inherit.components && extend(components, inherit.components);\n        inherit.parsers && extend(parsers, inherit.parsers);\n        inherit.directives && extend(directives, inherit.directives);\n        inherit.providers && extend(providers, inherit.providers);\n        inherit.maker && extend(maker, inherit.maker);\n        inherit.loadData && extend(loadData, inherit.loadData);\n    }\n\n    return create;\n}\n"],"names":["$set","target","field","value","Vue","set","$del","_extends","Object","assign","a","b","c","arguments","length","d","prototype","hasOwnProperty","call","extend","apply","this","toArray","Array","isArray","undefined","indexOf","NAME","getRuleInject","vm","parent","formCreateInject","$parent","$FormCreate","FormCreate","name","componentName","model","prop","provide","$pfc","inject","props","rule","type","required","option","extendOption","Boolean","disabled","api","String","subForm","inFor","data","formData","destroyed","validate","$f","isShow","unique","renderRule","ctxInject","updateValue","JSON","stringify","isMore","render","formCreate","methods","_refresh","_renderRule","_updateValue","$emit","watch","handler","n","config","forceCoverValue","coverValue","setValue","deep","initOptions","refresh","every","v","_this","$handle","reloadRule","beforeCreate","keys","forEach","k","_this2","$options","created","fapi","rmSubForm","sub","getSubForm","idx","splice","$on","$watch","_this3","push","addSubForm","immediate","is","arg","toString","Undef","Element","_typeof","nodeType","trueArray","Function","getType","str","exec","empty","hasProperty","t","normalMerge","toArrayMerge","functionalMerge","mergeProps","objects","initial","opt","_normalMerge","_toArrayMerge","_functionalMerge","propsMerge","reduce","key","arrA","arrB","event","hook","mergeFn","fn1","fn2","keyAttrs","arrayAttrs","normalAttrs","format","msg","getRule","err","console","error","deepExtend","origin","mode","isArr","clone","nst","_clone","__json","__origin","filter","__ctrl","deepCopy","PREFIX","SUFFIX","$T","$TX","FUNCTION","toJson","obj","space","val","_isVue","__emit","makeFn","fn","parseFn","trim","flag","replace","__inject","e","parseJson","json","parse","enumerable","writable","configurable","copyRule","copyRules","rules","mergeRule","merge","array","normal","r","funcProxy","that","proxy","defineProperties","get","byCtx","__fc__","__origin__","invoke","def","logError","creatorFactory","init","title","maker","Creator","_data","on","options","children","effect","hidden","display","appendProto","attrs","setProp","constructor","commonMaker","create","make","createTmp","template","makerFactory","factory","copy","toCase","lower","toLocaleUpperCase","toLowerCase","toLine","line","toLocaleLowerCase","substr","id","uniqueId","num","Math","random","Number","Date","now","deepSet","to","split","Render","handle","fc","$manager","vNode","CreateNode","sort","initCache","initRender","clearCacheAll","clearCache","ctx","cache","use","setCache","vnode","slot","getCache","useCache","tempList","clearOrgChildren","initOrgChildren","ctxs","orgChildren","parser","loadChildren","getTypeSlot","_fn","$scopedSlots","vn","$h","$createElement","beforeRender","renderList","renderSlot","renderName","renderId","renderField","container","map","renderCtx","makeVm","getInjectData","mergeGlobal","g","global","cacheConfig","originType","trueType","setOptions","optionsTo","setTempProps","$props","injectProp","injectKeys","renderTemp","compile","warn","tip","el","$nextTick","mounted","input","_this4","onInput","ref","parseSide","side","renderSides","temp","prefix","suffix","_this5","cacheFlag","_type","none","renderChildren","initProp","tidyRule","ctxProp","preview","makeWrap","item","_this6","style","form","_this7","custom","mergeProp","_this8","onMounted","exportEl","$el","__rule__","getFormData","callback","expression","$refs","isRm","child","_this9","deferSyncValue","rmCtx","defaultRender","component","makeComponent","alias","aliasMap","_this10","useRender","EVENT","RuleContext","defaultValue","wrapRef","linkOn","root","ctrlRule","computed","payload","updateType","updateKey","update","effectData","clearEffectData","setParser","check","unwatch","un","unlink","link","appendLink","watchTo","watchCtx","rmCtrl","deleted","$render","$api","ctrl","rm","_rm","index","noWatch","updated","cacheValue","condition","findCtrl","i","isCtrl","strFn","toEmpty","BaseParser","toFormValue","toValue","formValue","noneKey","Handler","watching","loading","reloading","noWatchFn","deferSyncFn","isMounted","appendData","providers","cycleLoad","loadedId","nextTick","changeStatus","pageEnd","nextReload","lifecycle","bus","initData","manager","extendApi","h","tidyFields","fields","getCtxs","allSubForm","subs","top","getFieldCtx","appendValue","getValue","fieldCtx","removeField","getCtx","removeRule","destroy","parentNode","removeChild","$destroy","append","after","prepend","state","hiddenStatus","displayStatus","all","nameCtx","bind","reload","updateOptions","onSubmit","sync","refreshOptions","hideForm","hide","clearChangeStatus","updateRule","updateRules","mergeRules","setEffect","attr","updateValidate","updateValidates","validates","refreshValidate","resetFields","method","Error","args","trigger","closeModal","$once","nextRefresh","emit","helper","changeValue","changeField","Api","getBody","xhr","text","responseText","response","fetch","XMLHttpRequest","action","onerror","onError","onload","status","url","getError","onSuccess","open","dataType","FormData","setRequestHeader","withCredentials","headers","send","useProvider","usePage","loadRule","__init","parseInjectEvent","injectEvent","parseEventLst","parseEvent","parseEmit","emitPrefix","emitKey","eventName","eventInject","fieldKey","_inject","self","propsData","unshift","useInject","page","first","limit","ceil","parseInt","pageLoad","pageFn","$off","clearNextTick","clearTimeout","bindNextTick","setTimeout","parseRule","_rule","fullRule","loadFn","loadCtrl","control","syncProp","pre","_loadRule","syncForm","isRepeat","ruleEffect","repeat","isCopy","isInit","bindParser","setCtx","_preIndex","preIndex","refreshUpdate","defineProperty","valueHandle","refreshControl","useCtrl","controls","getCtrl","handleFn","valid","isHidden","hideLst","reverse","clearValidateState","ruleCon","ctrlCtx","_reloadRule","useLoader","setFlag","setFormData","syncValue","valueChange","isQuote","isChange","refreshRule","useInput","getNameCtx","setIdCtx","rmIdCtx","lst","getParser","list","parsers","o","rmSub","watchEffect","useContext","_mounted","useLifecycle","ps","_c","p","components","arr","getComponent","onEffect","provider","used","_used","_ctx$rule","_ctx$rule$effect","emitEffect","getEffect","getProp","clearProp","useEffect","functional","CreateNodeFactory","setVm","tag","isReservedTag","nativeOn","Node","domProps","innerHTML","context","nodes","createManager","proto","CustomManager","Manager","mergeOptionsRule","$r","getSlot","mergeOptions","tidyOptions","getDefaultOptions","componentValidate","load","validator","$required","message","parseVal","_","run","parseOpt","body","beforeFetch","then","loaded","loadData","events","join","_vue","window","nameProp","_getEl","document","querySelector","mountForm","$vm","$data","$mount","instance","FormCreateFactory","fragment","directives","$provider","globalConfig","getApi","directive","register","componentAlias","base","setPrototypeOf","$form","formCreateParser","_emitData","setData","removeData","$vnode","install","_opt","appendChild","inherit","_config","useAttr","version","ui","mount","remove","Handle","isSub","submitBtn","resetBtn","_installedFormCreate","$formCreate","html"],"mappings":"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"}