{"ast":null,"code":"import employee from \"@/views/manager/Employee.vue\";\nexport default {\n  name: \"Notice\",\n  computed: {\n    employee() {\n      return employee;\n    }\n  },\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      year: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        employeeId: [{\n          required: true,\n          message: '请选择员工',\n          trigger: 'blur'\n        }],\n        year: [{\n          required: true,\n          message: '请选择年月',\n          trigger: 'blur'\n        }],\n        time: [{\n          required: true,\n          message: '请选择日期',\n          trigger: 'blur'\n        }],\n        price: [{\n          required: true,\n          message: '请选择薪资',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      employeeData: []\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadEmployeeData();\n  },\n  methods: {\n    loadEmployeeData() {\n      this.$request.get('/employee/selectAll').then(res => {\n        if (res.code == '200') {\n          this.employeeData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/financial/update' : '/financial/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/financial/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/financial/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/financial/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          year: this.year\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.year = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["employee","name","computed","data","tableData","pageNum","pageSize","total","year","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","employeeId","required","message","trigger","time","price","ids","employeeData","created","load","loadEmployeeData","methods","$request","get","then","res","code","$message","error","msg","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","id","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/Financial.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"search\">\r\n            <el-input placeholder=\"请输入年月：如2024-04\" style=\"width: 200px\" v-model=\"year\"></el-input>\r\n            <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n            <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n\r\n        <div class=\"operation\">\r\n            <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n            <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n        </div>\r\n\r\n        <div class=\"table\">\r\n            <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n                <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"支出说明\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"price\" label=\"支出时间\" show-overflow-tooltip></el-table-column>\r\n                <el-table-column prop=\"time\" label=\"支出时间\"></el-table-column>\r\n                <el-table-column prop=\"price\" label=\"发放薪资\"></el-table-column>\r\n                <el-table-column prop=\"note\" label=\"备注\"></el-table-column>\r\n\r\n                <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">编辑</el-button>\r\n                        <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>删除</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <div class=\"pagination\">\r\n                <el-pagination\r\n                        background\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"pageNum\"\r\n                        :page-sizes=\"[5, 10, 20]\"\r\n                        :page-size=\"pageSize\"\r\n                        layout=\"total, prev, pager, next\"\r\n                        :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n            <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n                <el-form-item prop=\"employeeId\" label=\"选择员工\">\r\n                    <el-select v-model=\"form.employeeId\" style=\"width: 100%\">\r\n                        <el-option v-for=\"item in employeeData\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item prop=\"year\" label=\"发放年月\">\r\n                    <el-date-picker style=\"width: 100%\"\r\n                                    v-model=\"form.year\"\r\n                                    type=\"month\"\r\n                                    value-format=\"yyyy-MM\"\r\n                                    placeholder=\"选择月\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item prop=\"time\" label=\"发放时间\">\r\n                    <el-date-picker style=\"width: 100%\"\r\n                                    v-model=\"form.time\"\r\n                                    type=\"datetime\"\r\n                                    value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                                    placeholder=\"选择时间\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item prop=\"price\" label=\"发放薪资\">\r\n                    <el-input v-model=\"form.price\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"note\" label=\"备注说明\">\r\n                    <el-input v-model=\"form.note\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport employee from \"@/views/manager/Employee.vue\";\r\n\r\nexport default {\r\n    name: \"Notice\",\r\n    computed: {\r\n        employee() {\r\n            return employee\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            tableData: [],  // 所有的数据\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 10,  // 每页显示的个数\r\n            total: 0,\r\n            year: null,\r\n            fromVisible: false,\r\n            form: {},\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n            rules: {\r\n                employeeId: [\r\n                    {required: true, message: '请选择员工', trigger: 'blur'},\r\n                ],\r\n                year: [\r\n                    {required: true, message: '请选择年月', trigger: 'blur'},\r\n                ],\r\n                time: [\r\n                    {required: true, message: '请选择日期', trigger: 'blur'},\r\n                ],\r\n                price: [\r\n                    {required: true, message: '请选择薪资', trigger: 'blur'},\r\n                ]\r\n            },\r\n            ids: [],\r\n            employeeData: [],\r\n        }\r\n    },\r\n    created() {\r\n        this.load(1)\r\n        this.loadEmployeeData()\r\n    },\r\n    methods: {\r\n        loadEmployeeData() {\r\n            this.$request.get('/employee/selectAll').then(res => {\r\n                if (res.code == '200') {\r\n                    this.employeeData = res.data\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        handleAdd() {   // 新增数据\r\n            this.form = {}  // 新增数据的时候清空数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        handleEdit(row) {   // 编辑数据\r\n            this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n            this.$refs.formRef.validate((valid) => {\r\n                if (valid) {\r\n                    this.$request({\r\n                        url: this.form.id ? '/financial/update' : '/financial/add',\r\n                        method: this.form.id ? 'PUT' : 'POST',\r\n                        data: this.form\r\n                    }).then(res => {\r\n                        if (res.code === '200') {  // 表示成功保存\r\n                            this.$message.success('保存成功')\r\n                            this.load(1)\r\n                            this.fromVisible = false\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        del(id) {   // 单个删除\r\n            this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/financial/delete/' + id).then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load(1)\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n            })\r\n        },\r\n        handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n            this.ids = rows.map(v => v.id)   //  [1,2]\r\n        },\r\n        delBatch() {   // 批量删除\r\n            if (!this.ids.length) {\r\n                this.$message.warning('请选择数据')\r\n                return\r\n            }\r\n            this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/financial/delete/batch', {data: this.ids}).then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load(1)\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n            })\r\n        },\r\n        load(pageNum) {  // 分页查询\r\n            if (pageNum) this.pageNum = pageNum\r\n            this.$request.get('/financial/selectPage', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    year: this.year,\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data?.list\r\n                this.total = res.data?.total\r\n            })\r\n        },\r\n        reset() {\r\n            this.year = null\r\n            this.load(1)\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.load(pageNum)\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}