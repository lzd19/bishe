{"ast":null,"code":"export default {\n  name: \"Apply\",\n  data() {\n    return {\n      processTemplateprocessTemplate: null,\n      rule: [],\n      option: {}\n    };\n  },\n  created() {\n    let processTemplateId = this.$route.params.id;\n    this.fetchData(processTemplateId);\n  },\n  methods: {\n    onSubmit(formData) {\n      console.log(formData);\n      let formShowData = {};\n      this.rule.forEach(item => {\n        for (let key in formData) {\n          if (key === item.field) {\n            console.log(item.title, formData[key]);\n            formShowData[item.title] = formData[key];\n          }\n        }\n      });\n      let DATA = {\n        formData: formData,\n        formShowData: formShowData\n      };\n      console.log(DATA);\n      let processFormVo = {\n        \"processTemplateId\": this.processTemplate.id,\n        \"processTypeId\": this.processTemplate.processTypeId,\n        \"formValues\": JSON.stringify(DATA)\n      };\n      console.log(processFormVo);\n      this.$request.post('/processApiController/startUp/' + id).then();\n    },\n    fetchData(processTemplateId) {\n      this.$request.get('/processApiController/getProcessTemplate/' + processTemplateId).then(res => {\n        this.processTemplate = res.data;\n        this.rule = JSON.parse(this.processTemplate.formProps);\n        this.option = JSON.parse(this.processTemplate.formOptions);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","processTemplateprocessTemplate","rule","option","created","processTemplateId","$route","params","id","fetchData","methods","onSubmit","formData","console","log","formShowData","forEach","item","key","field","title","DATA","processFormVo","processTemplate","processTypeId","JSON","stringify","$request","post","then","get","res","parse","formProps","formOptions"],"sources":["src/views/manager/Apply.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <van-nav-bar\r\n            title=\"发起审批\"\r\n            left-text=\"返回\"\r\n            left-arrow\r\n            @click-left=\"() => $router.back()\"\r\n        />\r\n        <div style=\"margin: 10px 10px 0 0;border: 0px solid red;\">\r\n            <form-create\r\n                :rule=\"rule\"\r\n                :option=\"option\"\r\n                @submit=\"onSubmit\"\r\n            ></form-create>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Apply\",\r\n    data() {\r\n        return {\r\n            processTemplateprocessTemplate: null,\r\n            rule: [],\r\n            option: {}\r\n        };\r\n    },\r\n    created() {\r\n        let processTemplateId = this.$route.params.id;\r\n        this.fetchData(processTemplateId);\r\n    },\r\n    methods:{\r\n        onSubmit(formData) {\r\n            console.log(formData);\r\n            let formShowData = {};\r\n            this.rule.forEach(item => {\r\n                for (let key in formData) {\r\n                    if (key === item.field) {\r\n                        console.log(item.title, formData[key]);\r\n                        formShowData[item.title] = formData[key];\r\n                    }\r\n                }\r\n            });\r\n            let DATA = {\r\n                formData: formData,\r\n                formShowData: formShowData\r\n            };\r\n            console.log(DATA);\r\n            let processFormVo = {\r\n                \"processTemplateId\": this.processTemplate.id,\r\n                \"processTypeId\": this.processTemplate.processTypeId,\r\n                \"formValues\": JSON.stringify(DATA)\r\n            };\r\n            console.log(processFormVo)\r\n            this.$request.post('/processApiController/startUp/'+id).then()\r\n        },\r\n        fetchData(processTemplateId) {\r\n            this.$request.get('/processApiController/getProcessTemplate/'+processTemplateId).then(res=>{\r\n                this.processTemplate = res.data;\r\n                this.rule = JSON.parse(this.processTemplate.formProps);\r\n                this.option = JSON.parse(this.processTemplate.formOptions);\r\n            })\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.el-form {\r\n    .el-form-item {\r\n        /deep/ .el-form-item__label {\r\n            font-size: 18px;\r\n            font-weight: 800;\r\n            color: blue;\r\n        }\r\n    }\r\n}\r\n</style>"],"mappings":"AAmBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,8BAAA;MACAC,IAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,iBAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,KAAAC,SAAA,CAAAJ,iBAAA;EACA;EACAK,OAAA;IACAC,SAAAC,QAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA;MACA,IAAAG,YAAA;MACA,KAAAb,IAAA,CAAAc,OAAA,CAAAC,IAAA;QACA,SAAAC,GAAA,IAAAN,QAAA;UACA,IAAAM,GAAA,KAAAD,IAAA,CAAAE,KAAA;YACAN,OAAA,CAAAC,GAAA,CAAAG,IAAA,CAAAG,KAAA,EAAAR,QAAA,CAAAM,GAAA;YACAH,YAAA,CAAAE,IAAA,CAAAG,KAAA,IAAAR,QAAA,CAAAM,GAAA;UACA;QACA;MACA;MACA,IAAAG,IAAA;QACAT,QAAA,EAAAA,QAAA;QACAG,YAAA,EAAAA;MACA;MACAF,OAAA,CAAAC,GAAA,CAAAO,IAAA;MACA,IAAAC,aAAA;QACA,0BAAAC,eAAA,CAAAf,EAAA;QACA,sBAAAe,eAAA,CAAAC,aAAA;QACA,cAAAC,IAAA,CAAAC,SAAA,CAAAL,IAAA;MACA;MACAR,OAAA,CAAAC,GAAA,CAAAQ,aAAA;MACA,KAAAK,QAAA,CAAAC,IAAA,oCAAApB,EAAA,EAAAqB,IAAA;IACA;IACApB,UAAAJ,iBAAA;MACA,KAAAsB,QAAA,CAAAG,GAAA,+CAAAzB,iBAAA,EAAAwB,IAAA,CAAAE,GAAA;QACA,KAAAR,eAAA,GAAAQ,GAAA,CAAA/B,IAAA;QACA,KAAAE,IAAA,GAAAuB,IAAA,CAAAO,KAAA,MAAAT,eAAA,CAAAU,SAAA;QACA,KAAA9B,MAAA,GAAAsB,IAAA,CAAAO,KAAA,MAAAT,eAAA,CAAAW,WAAA;MACA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}