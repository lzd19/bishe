{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { store } from \"core-js/internals/reflect-metadata\";\nconst defaultForm = {\n  id: '',\n  name: '',\n  formProps: '',\n  formOptions: '',\n  processDefinitionKey: '',\n  processDefinitionPath: '',\n  description: ''\n};\nexport default {\n  data() {\n    return {\n      stepIndex: 1,\n      form: defaultForm,\n      processTemplate: defaultForm,\n      // uploadHeaders: {\n      //     'token': store.getters.token\n      // },\n      fileList: [],\n      rules: {\n        processTypeId: [{\n          required: true,\n          message: '请选择审批类型',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入审批名称',\n          trigger: 'blur'\n        }]\n      },\n      processTypeList: []\n    };\n  },\n  created() {\n    this.loadProcessTypeList();\n  },\n  methods: {\n    store() {\n      return store;\n    },\n    loadProcessTypeList() {\n      this.$request.get('/oaProcessType/selectAll').then(res => {\n        if (res.code === '200') {\n          this.processTypeList = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    // form,\n    pre() {\n      this.stepIndex -= 1;\n    },\n    //\n    next() {\n      if (this.stepIndex === 2) {\n        this.form.formProps = JSON.stringify(this.$refs.designer.getRule());\n        this.form.formOptions = JSON.stringify(this.$refs.designer.getOption());\n        console.log(JSON.stringify(this.form));\n      }\n      if (this.stepIndex === 3) {\n        this.saveOrUpdate();\n        this.$router.push('OaProcessTemplate');\n      }\n      this.stepIndex += 1;\n    },\n    // fetchProcessTypeData() {\n    //     processTypeApi.findAll().then(response => {\n    //         this.processTypeList = response.data\n    //     })\n    // },\n    // fetchDataById(id) {\n    //     api.getById(id).then(response => {\n    //         this.form = response.data\n    //         // 给表单设计器赋值\n    //         this.$refs.designer.setRule(JSON.parse(this.form.formProps))\n    //         this.$refs.designer.setOption(JSON.parse(this.form.formOptions))\n    //         this.fileList = [{\n    //             name: this.form.processDefinitionPath,\n    //             url: this.form.processDefinitionPath\n    //         }]\n    //     })\n    // },\n\n    saveOrUpdate() {\n      this.saveBtnDisabled = true; // 防止表单重复提交\n      if (!this.form.id) {\n        this.saveData();\n      } else {\n        this.updateData();\n      }\n    },\n    // 新增\n    saveData() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: '/oaProcessTemplate/add',\n            method: 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              // this.load(1)\n              // this.fromVisible = false\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n      //     .then(res => {\n      //     if (res.code === '200') {  // 表示成功保存\n      //         this.$message.success('保存成功')\n      //         // this.load(1)\n      //         // this.fromVisible = false\n      //     } else {\n      //         this.$message.error(res.msg)  // 弹出错误的信息\n      //     }\n      // })\n      // api.save(this.form).then(response => {\n      //     this.$router.push('/processSet/processTemplate')\n      // })\n    },\n\n    // 根据id更新记录\n    updateData() {\n      // api.updateById(this.form).then(response => {\n      //     this.$router.push('/processSet/processTemplate')\n      // })\n    },\n    // 文件上传限制条件\n    beforeUpload(file) {\n      const isZip = file.type === 'application/x-zip-compressed';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isZip) {\n        this.$message.error('文件格式不正确!');\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error('上传大小不能超过 2MB!');\n        return false;\n      }\n      return true;\n    },\n    // :on-success=\"onUploadSuccess\"\n    // 上传成功的回调\n    // onUploadSuccess(res, file) {\n    //     // 填充上传文件列表\n    //     this.form.processDefinitionPath = res.data.processDefinitionPath\n    //     this.form.processDefinitionKey = res.data.processDefinitionKey\n    // },\n\n    back() {\n      this.$router.push('OaProcessTemplate');\n    }\n  }\n};","map":{"version":3,"names":["store","defaultForm","id","name","formProps","formOptions","processDefinitionKey","processDefinitionPath","description","data","stepIndex","form","processTemplate","fileList","rules","processTypeId","required","message","trigger","processTypeList","created","loadProcessTypeList","methods","$request","get","then","res","code","$message","error","msg","pre","next","JSON","stringify","$refs","designer","getRule","getOption","console","log","saveOrUpdate","$router","push","saveBtnDisabled","saveData","updateData","formRef","validate","valid","url","method","success","beforeUpload","file","isZip","type","isLt2M","size","back"],"sources":["src/views/manager/Template.vue"],"sourcesContent":["<template>\r\n    <div class=\"app-container\">\r\n        <el-steps :active=\"stepIndex\" finish-status=\"success\">\r\n            <el-step title=\"基本设置\"></el-step>\r\n            <el-step title=\"表单设置\"></el-step>\r\n            <el-step title=\"流程设置\"></el-step>\r\n        </el-steps>\r\n\r\n        <div class=\"tools-div\">\r\n            <el-button v-if=\"stepIndex > 1\" icon=\"el-icon-check\" type=\"primary\" size=\"small\" @click=\"pre()\" round>上一步\r\n            </el-button>\r\n            <el-button icon=\"el-icon-check\" type=\"primary\" size=\"small\" @click=\"next()\" round>{{\r\n                stepIndex == 3 ? '提交保存' : '下一步'\r\n                }}\r\n            </el-button>\r\n            <el-button type=\"primary\" size=\"small\" @click=\"back()\">返回</el-button>\r\n        </div>\r\n\r\n        <!-- 第一步 -->\r\n        <div v-show=\"stepIndex == 1\" style=\"margin-top: 20px;\">\r\n            <el-form ref=\"formRef\" :model=\"form\" :rules=\"rules\" label-width=\"150px\" size=\"small\" style=\"padding-right: 40px;\">\r\n                <el-form-item label=\"审批类型\" prop=\"processName\">\r\n                    <el-select v-model=\"form.processTypeId\" placeholder=\"审批类型\">\r\n                        <el-option v-for=\"item in processTypeList\" :label=\"item.name\" :value=\"item.id\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"审批名称\">\r\n                    <el-input v-model=\"form.name\" autocomplete=\"off\"/>\r\n                </el-form-item>\r\n                <el-form-item label=\"描述\">\r\n                    <el-input v-model=\"form.description\"/>\r\n                </el-form-item>\r\n            </el-form>\r\n        </div>\r\n\r\n        <!-- 第二步 -->\r\n        <div v-show=\"stepIndex == 2\" style=\"margin-top: 20px;\">\r\n            <!--表单构建器-->\r\n            <fc-designer class=\"form-build\" ref=\"designer\"/>\r\n        </div>\r\n\r\n<!--        &lt;!&ndash; 第三步 &ndash;&gt;-->\r\n        <div v-show=\"stepIndex == 3\" style=\"margin-top: 20px;\">\r\n            <el-upload\r\n                    class=\"upload-demo\"\r\n                    drag\r\n                    action=\"http://localhost:9090/oaProcessTemplate/uploadProcessDefinition\"\r\n                    :before-upload=\"beforeUpload\"\r\n                    :file-list=\"fileList\"\r\n            >\r\n                <i class=\"el-icon-upload\"></i>\r\n                <div class=\"el-upload__text\">将Activiti流程设计文件拖到此处，或<em>点击上传</em></div>\r\n                <div class=\"el-upload__tip\" slot=\"tip\">只能上传zip压缩文件，且不超过2048kb</div>\r\n            </el-upload>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {store} from \"core-js/internals/reflect-metadata\";\r\n\r\nconst defaultForm = {\r\n    id: '',\r\n    name: '',\r\n    formProps: '',\r\n    formOptions: '',\r\n    processDefinitionKey: '',\r\n    processDefinitionPath: '',\r\n    description: ''\r\n}\r\nexport default {\r\n    data() {\r\n        return {\r\n            stepIndex: 1,\r\n            form:defaultForm,\r\n            processTemplate: defaultForm,\r\n            // uploadHeaders: {\r\n            //     'token': store.getters.token\r\n            // },\r\n            fileList: [],\r\n            rules:{\r\n                processTypeId:[\r\n                    {required:true, message:'请选择审批类型',trigger:'blur'},\r\n                ],\r\n                name:[\r\n                    {required:true, message:'请输入审批名称',trigger:'blur'},\r\n                ]\r\n            },\r\n            processTypeList:[],\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.loadProcessTypeList()\r\n    },\r\n\r\n    methods: {\r\n        store() {\r\n            return store\r\n        },\r\n        loadProcessTypeList(){\r\n            this.$request.get('/oaProcessType/selectAll').then(res => {\r\n                if (res.code === '200') {\r\n                    this.processTypeList = res.data\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        // form,\r\n        pre() {\r\n            this.stepIndex -= 1\r\n        },\r\n        //\r\n        next() {\r\n            if (this.stepIndex === 2) {\r\n                this.form.formProps = JSON.stringify(this.$refs.designer.getRule())\r\n                this.form.formOptions = JSON.stringify(this.$refs.designer.getOption())\r\n                console.log(JSON.stringify(this.form))\r\n            }\r\n            if (this.stepIndex === 3) {\r\n                this.saveOrUpdate()\r\n                this.$router.push('OaProcessTemplate')\r\n            }\r\n            this.stepIndex += 1\r\n        },\r\n\r\n        // fetchProcessTypeData() {\r\n        //     processTypeApi.findAll().then(response => {\r\n        //         this.processTypeList = response.data\r\n        //     })\r\n        // },\r\n        // fetchDataById(id) {\r\n        //     api.getById(id).then(response => {\r\n        //         this.form = response.data\r\n        //         // 给表单设计器赋值\r\n        //         this.$refs.designer.setRule(JSON.parse(this.form.formProps))\r\n        //         this.$refs.designer.setOption(JSON.parse(this.form.formOptions))\r\n        //         this.fileList = [{\r\n        //             name: this.form.processDefinitionPath,\r\n        //             url: this.form.processDefinitionPath\r\n        //         }]\r\n        //     })\r\n        // },\r\n\r\n        saveOrUpdate() {\r\n            this.saveBtnDisabled = true // 防止表单重复提交\r\n            if (!this.form.id) {\r\n                this.saveData()\r\n            } else {\r\n                this.updateData()\r\n            }\r\n        },\r\n\r\n        // 新增\r\n        saveData() {\r\n            this.$refs.formRef.validate((valid)=>{\r\n                if (valid){\r\n                    this.$request({\r\n                        url:'/oaProcessTemplate/add',\r\n                        method:'POST',\r\n                        data: this.form\r\n                    }).then(res => {\r\n                        if (res.code === '200') {  // 表示成功保存\r\n                            this.$message.success('保存成功')\r\n                            // this.load(1)\r\n                            // this.fromVisible = false\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            //     .then(res => {\r\n            //     if (res.code === '200') {  // 表示成功保存\r\n            //         this.$message.success('保存成功')\r\n            //         // this.load(1)\r\n            //         // this.fromVisible = false\r\n            //     } else {\r\n            //         this.$message.error(res.msg)  // 弹出错误的信息\r\n            //     }\r\n            // })\r\n            // api.save(this.form).then(response => {\r\n            //     this.$router.push('/processSet/processTemplate')\r\n            // })\r\n        },\r\n\r\n        // 根据id更新记录\r\n        updateData() {\r\n            // api.updateById(this.form).then(response => {\r\n            //     this.$router.push('/processSet/processTemplate')\r\n            // })\r\n        },\r\n\r\n        // 文件上传限制条件\r\n        beforeUpload(file) {\r\n            const isZip = file.type === 'application/x-zip-compressed'\r\n            const isLt2M = file.size / 1024 / 1024 < 2\r\n\r\n            if (!isZip) {\r\n                this.$message.error('文件格式不正确!')\r\n                return false\r\n            }\r\n            if (!isLt2M) {\r\n                this.$message.error('上传大小不能超过 2MB!')\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n\r\n// :on-success=\"onUploadSuccess\"\r\n        // 上传成功的回调\r\n        // onUploadSuccess(res, file) {\r\n        //     // 填充上传文件列表\r\n        //     this.form.processDefinitionPath = res.data.processDefinitionPath\r\n        //     this.form.processDefinitionKey = res.data.processDefinitionKey\r\n        // },\r\n\r\n        back() {\r\n            this.$router.push('OaProcessTemplate')\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":";AA4DA,SAAAA,KAAA;AAEA,MAAAC,WAAA;EACAC,EAAA;EACAC,IAAA;EACAC,SAAA;EACAC,WAAA;EACAC,oBAAA;EACAC,qBAAA;EACAC,WAAA;AACA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,IAAA,EAAAV,WAAA;MACAW,eAAA,EAAAX,WAAA;MACA;MACA;MACA;MACAY,QAAA;MACAC,KAAA;QACAC,aAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAf,IAAA,GACA;UAAAa,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,eAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,mBAAA;EACA;EAEAC,OAAA;IACAtB,MAAA;MACA,OAAAA,KAAA;IACA;IACAqB,oBAAA;MACA,KAAAE,QAAA,CAAAC,GAAA,6BAAAC,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAR,eAAA,GAAAO,GAAA,CAAAjB,IAAA;QACA;UACA,KAAAmB,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;QACA;MACA;IACA;IACA;IACAC,IAAA;MACA,KAAArB,SAAA;IACA;IACA;IACAsB,KAAA;MACA,SAAAtB,SAAA;QACA,KAAAC,IAAA,CAAAP,SAAA,GAAA6B,IAAA,CAAAC,SAAA,MAAAC,KAAA,CAAAC,QAAA,CAAAC,OAAA;QACA,KAAA1B,IAAA,CAAAN,WAAA,GAAA4B,IAAA,CAAAC,SAAA,MAAAC,KAAA,CAAAC,QAAA,CAAAE,SAAA;QACAC,OAAA,CAAAC,GAAA,CAAAP,IAAA,CAAAC,SAAA,MAAAvB,IAAA;MACA;MACA,SAAAD,SAAA;QACA,KAAA+B,YAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;MACA,KAAAjC,SAAA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA+B,aAAA;MACA,KAAAG,eAAA;MACA,UAAAjC,IAAA,CAAAT,EAAA;QACA,KAAA2C,QAAA;MACA;QACA,KAAAC,UAAA;MACA;IACA;IAEA;IACAD,SAAA;MACA,KAAAV,KAAA,CAAAY,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAA1B,QAAA;YACA2B,GAAA;YACAC,MAAA;YACA1C,IAAA,OAAAE;UACA,GAAAc,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAwB,OAAA;cACA;cACA;YACA;cACA,KAAAxB,QAAA,CAAAC,KAAA,CAAAH,GAAA,CAAAI,GAAA;YACA;UACA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;;IAEA;IACAgB,WAAA;MACA;MACA;MACA;IAAA,CACA;IAEA;IACAO,aAAAC,IAAA;MACA,MAAAC,KAAA,GAAAD,IAAA,CAAAE,IAAA;MACA,MAAAC,MAAA,GAAAH,IAAA,CAAAI,IAAA;MAEA,KAAAH,KAAA;QACA,KAAA3B,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAA4B,MAAA;QACA,KAAA7B,QAAA,CAAAC,KAAA;QACA;MACA;MACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA8B,KAAA;MACA,KAAAjB,OAAA,CAAAC,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}