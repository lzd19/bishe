{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"User\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      username: null,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      processName: [],\n      rule: [],\n      option: {},\n      processTemplate: {},\n      formDialogVisible: false\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadProcessName();\n  },\n  methods: {\n    publish(id) {\n      // api.publish(id).then(response => {\n      //     this.$message.success('发布成功')\n      //     this.fetchData(this.page)\n      // })\n    },\n    show(row) {\n      this.rule = JSON.parse(row.formProps);\n      this.option = JSON.parse(row.formOptions);\n      this.processTemplate = row;\n      this.formDialogVisible = true;\n    },\n    loadProcessName() {\n      this.$request.get('/oaProcessTemplate/selectAll').then(res => {\n        if (res.code == '200') {\n          this.departmentData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      // 新增数据\n      this.$router.push('Template');\n      // this.form = {}  // 新增数据的时候清空数据\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/oaProcessTemplate/update' : '/oaProcessTemplate/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/oaProcessTemplate/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/oaProcessTemplate/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/oaProcessTemplate/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize\n          // username: this.username,\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      // this.username = null\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","username","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","processName","rule","option","processTemplate","formDialogVisible","created","load","loadProcessName","methods","publish","id","show","row","formProps","formOptions","$request","get","then","res","code","departmentData","$message","error","msg","handleAdd","$router","push","handleEdit","stringify","save","$refs","formRef","validate","valid","url","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange"],"sources":["src/views/manager/OaProcessTemplate.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"operation\">\r\n            <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n            <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n        </div>\r\n\r\n        <div class=\"table\">\r\n            <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n                <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"审批名称\"></el-table-column>\r\n                <el-table-column prop=\"processName\" label=\"审批类型\"></el-table-column>\r\n                <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\r\n                <el-table-column prop=\"createTime\" label=\"创建时间\"></el-table-column>\r\n                <el-table-column prop=\"updateTime\" label=\"更新时间\"></el-table-column>\r\n                <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n                    <template v-slot=\"scope\">\r\n                        <el-button type=\"text\" size=\"mini\" @click=\"show(scope.row)\">查看审批设置</el-button>\r\n                        <el-button size=\"mini\" type=\"text\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                        <el-button size=\"mini\" type=\"text\" plain @click=\"del(scope.row.id)\">删除</el-button>\r\n                        <el-button v-if=\"scope.row.status == 0\" type=\"text\" size=\"mini\" @click=\"publish(scope.row.id)\">发布</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n\r\n            <div class=\"pagination\">\r\n                <el-pagination\r\n                        background\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"pageNum\"\r\n                        :page-sizes=\"[5, 10, 20]\"\r\n                        :page-size=\"pageSize\"\r\n                        layout=\"total, prev, pager, next\"\r\n                        :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n        </div>\r\n\r\n        <el-dialog title=\"查看审批设置\" :visible.sync=\"formDialogVisible\" width=\"35%\">\r\n            <h3>基本信息</h3>\r\n            <el-divider/>\r\n            <el-form ref=\"flashPromotionForm\" label-width=\"150px\" size=\"small\" style=\"padding-right: 40px;\">\r\n                <el-form-item label=\"审批类型\" style=\"margin-bottom: 0px;\">{{ processTemplate.processName }}</el-form-item>\r\n                <el-form-item label=\"名称\" style=\"margin-bottom: 0px;\">{{ processTemplate.name }}</el-form-item>\r\n                <el-form-item label=\"创建时间\" style=\"margin-bottom: 0px;\">{{ processTemplate.createTime }}</el-form-item>\r\n            </el-form>\r\n            <h3>表单信息</h3>\r\n            <el-divider/>\r\n            <div>\r\n                <form-create\r\n                        :rule=\"rule\"\r\n                        :option=\"option\"\r\n                ></form-create>\r\n            </div>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n    <el-button @click=\"formDialogVisible = false\" size=\"small\">取 消</el-button>\r\n  </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"User\",\r\n    data() {\r\n        return {\r\n            tableData: [],  // 所有的数据\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 10,  // 每页显示的个数\r\n            total: 0,\r\n            username: null,\r\n            fromVisible: false,\r\n            form: {},\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n            rules: {\r\n                username: [\r\n                    {required: true, message: '请输入账号', trigger: 'blur'},\r\n                ]\r\n            },\r\n            ids: [],\r\n            processName: [],\r\n\r\n            rule: [],\r\n            option: {},\r\n            processTemplate: {},\r\n            formDialogVisible: false\r\n        }\r\n    },\r\n    created() {\r\n        this.load(1)\r\n        this.loadProcessName()\r\n    },\r\n    methods: {\r\n        publish(id) {\r\n            // api.publish(id).then(response => {\r\n            //     this.$message.success('发布成功')\r\n            //     this.fetchData(this.page)\r\n            // })\r\n\r\n        },\r\n        show(row) {\r\n            this.rule = JSON.parse(row.formProps)\r\n            this.option = JSON.parse(row.formOptions)\r\n            this.processTemplate = row\r\n            this.formDialogVisible = true\r\n        },\r\n        loadProcessName() {\r\n            this.$request.get('/oaProcessTemplate/selectAll').then(res => {\r\n                if (res.code == '200') {\r\n                    this.departmentData = res.data\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        handleAdd() {   // 新增数据\r\n            this.$router.push('Template')\r\n            // this.form = {}  // 新增数据的时候清空数据\r\n        },\r\n        handleEdit(row) {   // 编辑数据\r\n            this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n            this.fromVisible = true   // 打开弹窗\r\n        },\r\n        save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n            this.$refs.formRef.validate((valid) => {\r\n                if (valid) {\r\n                    this.$request({\r\n                        url: this.form.id ? '/oaProcessTemplate/update' : '/oaProcessTemplate/add',\r\n                        method: this.form.id ? 'PUT' : 'POST',\r\n                        data: this.form\r\n                    }).then(res => {\r\n                        if (res.code === '200') {  // 表示成功保存\r\n                            this.$message.success('保存成功')\r\n                            this.load(1)\r\n                            this.fromVisible = false\r\n                        } else {\r\n                            this.$message.error(res.msg)  // 弹出错误的信息\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        del(id) {   // 单个删除\r\n            this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/oaProcessTemplate/delete/' + id).then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load(1)\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n            })\r\n        },\r\n        handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n            this.ids = rows.map(v => v.id)\r\n        },\r\n        delBatch() {   // 批量删除\r\n            if (!this.ids.length) {\r\n                this.$message.warning('请选择数据')\r\n                return\r\n            }\r\n            this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n                this.$request.delete('/oaProcessTemplate/delete/batch', {data: this.ids}).then(res => {\r\n                    if (res.code === '200') {   // 表示操作成功\r\n                        this.$message.success('操作成功')\r\n                        this.load(1)\r\n                    } else {\r\n                        this.$message.error(res.msg)  // 弹出错误的信息\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n            })\r\n        },\r\n        load(pageNum) {  // 分页查询\r\n            if (pageNum) this.pageNum = pageNum\r\n            this.$request.get('/oaProcessTemplate/selectPage', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    // username: this.username,\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data?.list\r\n                this.total = res.data?.total\r\n            })\r\n        },\r\n        reset() {\r\n            // this.username = null\r\n            this.load(1)\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.load(pageNum)\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}