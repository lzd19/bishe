{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"List\",\n  data() {\n    return {\n      list: [],\n      loading: false,\n      finished: false,\n      refreshing: false,\n      Userid: JSON.parse(localStorage.getItem('xm-user')).id,\n      pageNo: 1,\n      pageSize: 10,\n      pages: 1,\n      activeIndex: 0,\n      tabList: [{\n        title: \"待处理\"\n      }, {\n        title: \"已处理\"\n      }, {\n        title: \"已发起\"\n      }]\n    };\n  },\n  created() {\n    this.activeIndex = parseInt(this.$route.params.activeIndex);\n    this.onLoad();\n  },\n  methods: {\n    tabSwitch() {\n      //tab切换，重新初始化数据\n      this.list = [];\n      this.pageNo = 1;\n      this.finished = false;\n\n      //tabs切换时，如果之前的tab已经滚动到底部（list加载到底部），直接点击其他的tab，将再触发一次onload事件。\n      //可能调用2次onLoad()方法，延迟执行，通过时间差解决问题\n      setTimeout(() => {\n        if (!this.finished) {\n          this.onLoad();\n        }\n      }, 500);\n    },\n    onLoad() {\n      if (this.activeIndex === 0) {\n        this.findPending();\n      }\n      if (this.activeIndex === 1) {\n        this.findProcessed();\n      }\n      if (this.activeIndex === 2) {\n        this.findStarted();\n      }\n    },\n    findPending() {\n      console.log(this.pageNo);\n      this.$request.get('/processApiController/selectPage/' + this.Userid).then(res => {\n        console.log(res.data);\n        if (this.refreshing) {\n          this.list = [];\n          this.refreshing = false;\n        }\n        for (let i = 0; i < res.data.list.length; i++) {\n          let item = res.data.list[i];\n          // item.formValues = JSON.parse(item.formValues)\n          this.list.push(item);\n        }\n        this.pages = res.data.pages;\n        this.loading = false;\n        if (this.pageNo >= this.pages) {\n          this.finished = true;\n        }\n        this.pageNo++;\n      });\n    },\n    findProcessed() {},\n    findStarted() {},\n    onRefresh() {\n      // 清空列表数据\n      this.finished = false;\n      this.pageNo = 1;\n      // 重新加载数据\n      // 将 loading 设置为 true，表示处于加载状态\n      this.loading = true;\n      this.onLoad();\n    },\n    info(id, taskId) {\n      // this.$router.push({ path: '/show/'+id+'/'+taskId })\n      console.log(id, taskId);\n      this.$router.push({\n        path: 'Show',\n        params: {\n          id: id\n        },\n        query: {\n          taskId: taskId\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","list","loading","finished","refreshing","Userid","JSON","parse","localStorage","getItem","id","pageNo","pageSize","pages","activeIndex","tabList","title","created","parseInt","$route","params","onLoad","methods","tabSwitch","setTimeout","findPending","findProcessed","findStarted","console","log","$request","get","then","res","i","length","item","push","onRefresh","info","taskId","$router","path","query"],"sources":["src/views/manager/List.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <van-nav-bar\r\n            title=\"审批列表\"\r\n        />\r\n        <van-tabs v-model=\"activeIndex\" @click=\"tabSwitch\">\r\n            <van-tab\r\n                v-for=\"(item,key) in tabList\"\r\n                :key=\"key\"\r\n                :title=\"item.title\"\r\n            >\r\n            </van-tab>\r\n        </van-tabs>\r\n\r\n        <div class=\"list-wrap\" >\r\n            <van-pull-refresh v-model=\"refreshing\" @refresh=\"onRefresh\">\r\n                <van-list\r\n                    v-model=\"loading\"\r\n                    :finished=\"finished\"\r\n                    finished-text=\"没有更多了\"\r\n                    @load=\"onLoad\"\r\n                    :immediate-check=\"false\"\r\n                >\r\n                    <van-cell v-for=\"item in list\" :key=\"item.id\" @click=\"info(item.id, item.taskId)\">\r\n                        <template slot=\"default\">\r\n                            <div class=\"item-wrap\">\r\n                                <div class=\"item-header\">\r\n                                    <h3>{{item.title}}</h3>\r\n                                    <span>{{item.createTime}}</span>\r\n                                </div>\r\n                                <div class=\"item-status\">\r\n                                    <span :class=\"item.status === 1 ? '审批中' : item.status === 2 ? 'pass' : 'refused'\">{{ item.status === 1 ? '审批中' : item.status === 2 ? '审批通过' : '审批拒绝' }}</span>\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                    </van-cell>\r\n                </van-list>\r\n            </van-pull-refresh>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"List\",\r\n    data() {\r\n        return {\r\n            list: [],\r\n            loading: false,\r\n            finished: false,\r\n            refreshing: false,\r\n            Userid:JSON.parse(localStorage.getItem('xm-user')).id,\r\n            pageNo: 1,\r\n            pageSize: 10,\r\n            pages: 1,\r\n\r\n            activeIndex: 0,\r\n            tabList: [\r\n                { title:\"待处理\", },\r\n                { title:\"已处理\", },\r\n                { title:\"已发起\", }\r\n            ]\r\n        };\r\n    },\r\n    created(){\r\n        this.activeIndex = parseInt(this.$route.params.activeIndex);\r\n        this.onLoad()\r\n    },\r\n    methods:{\r\n        tabSwitch() {\r\n            //tab切换，重新初始化数据\r\n            this.list = []\r\n            this.pageNo = 1\r\n            this.finished = false\r\n\r\n            //tabs切换时，如果之前的tab已经滚动到底部（list加载到底部），直接点击其他的tab，将再触发一次onload事件。\r\n            //可能调用2次onLoad()方法，延迟执行，通过时间差解决问题\r\n            setTimeout(() => {\r\n                if(!this.finished) {\r\n                    this.onLoad();\r\n                }\r\n            }, 500);\r\n        },\r\n        onLoad() {\r\n            if(this.activeIndex === 0) {\r\n                this.findPending()\r\n            }\r\n            if(this.activeIndex === 1) {\r\n                this.findProcessed()\r\n            }\r\n            if(this.activeIndex === 2) {\r\n                this.findStarted()\r\n            }\r\n        },\r\n        findPending(){\r\n            console.log(this.pageNo);\r\n            this.$request.get('/processApiController/selectPage/'+this.Userid).then(res=>{\r\n                console.log(res.data);\r\n                if (this.refreshing) {\r\n                    this.list = [];\r\n                    this.refreshing = false;\r\n                }\r\n                for (let i=0;i<res.data.list.length;i++) {\r\n                    let item = res.data.list[i]\r\n                    // item.formValues = JSON.parse(item.formValues)\r\n                    this.list.push(item);\r\n                }\r\n                this.pages = res.data.pages;\r\n\r\n                this.loading = false;\r\n                if(this.pageNo >= this.pages) {\r\n                    this.finished = true;\r\n                }\r\n\r\n                this.pageNo++;\r\n            })\r\n        },\r\n        findProcessed() {\r\n\r\n        },\r\n\r\n        findStarted() {\r\n\r\n        },\r\n        onRefresh() {\r\n            // 清空列表数据\r\n            this.finished = false;\r\n\r\n            this.pageNo = 1;\r\n            // 重新加载数据\r\n            // 将 loading 设置为 true，表示处于加载状态\r\n            this.loading = true;\r\n            this.onLoad();\r\n        },\r\n        info(id, taskId) {\r\n            // this.$router.push({ path: '/show/'+id+'/'+taskId })\r\n            console.log(id,taskId);\r\n            this.$router.push({ path: 'Show',params:{id:id},query:{taskId:taskId}})\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/deep/ .van-nav-bar {\r\n    background: #1D1E20;\r\n}\r\n/deep/ .van-nav-bar__title {\r\n    color: #fff;\r\n}\r\n.container {\r\n    padding-bottom: 50px;\r\n    .list-wrap {\r\n        margin-top: 4px;\r\n        border-top: 1px solid #ebedf0;\r\n    }\r\n    .item-wrap {\r\n        font-size: 12px;\r\n        color: #A7A8A9;\r\n        .item-header {\r\n            display: flex;\r\n            align-items: center;\r\n            img {\r\n                width: 20px;\r\n                height: 20px;\r\n                border-radius: 4px;\r\n                margin-right: 4px;\r\n            }\r\n            h3 {\r\n                flex: 1;\r\n                font-size: 15px;\r\n                color: #000;\r\n                padding: 0;\r\n                margin: 0;\r\n            }\r\n\r\n        }\r\n\r\n        .item-block {\r\n            padding: 4px 0;\r\n            font-size: 14px;\r\n            p {\r\n                padding: 0;\r\n                margin: 0;\r\n                line-height: 20px;\r\n            }\r\n        }\r\n        .item-status {\r\n            .pass {\r\n                color: #4CB971;\r\n            }\r\n            .refused {\r\n                color: #EB8473;\r\n            }}}}\r\n</style>"],"mappings":";AA2CA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,OAAA;MACAC,QAAA;MACAC,UAAA;MACAC,MAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA,aAAAC,EAAA;MACAC,MAAA;MACAC,QAAA;MACAC,KAAA;MAEAC,WAAA;MACAC,OAAA,GACA;QAAAC,KAAA;MAAA,GACA;QAAAA,KAAA;MAAA,GACA;QAAAA,KAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAH,WAAA,GAAAI,QAAA,MAAAC,MAAA,CAAAC,MAAA,CAAAN,WAAA;IACA,KAAAO,MAAA;EACA;EACAC,OAAA;IACAC,UAAA;MACA;MACA,KAAAtB,IAAA;MACA,KAAAU,MAAA;MACA,KAAAR,QAAA;;MAEA;MACA;MACAqB,UAAA;QACA,UAAArB,QAAA;UACA,KAAAkB,MAAA;QACA;MACA;IACA;IACAA,OAAA;MACA,SAAAP,WAAA;QACA,KAAAW,WAAA;MACA;MACA,SAAAX,WAAA;QACA,KAAAY,aAAA;MACA;MACA,SAAAZ,WAAA;QACA,KAAAa,WAAA;MACA;IACA;IACAF,YAAA;MACAG,OAAA,CAAAC,GAAA,MAAAlB,MAAA;MACA,KAAAmB,QAAA,CAAAC,GAAA,4CAAA1B,MAAA,EAAA2B,IAAA,CAAAC,GAAA;QACAL,OAAA,CAAAC,GAAA,CAAAI,GAAA,CAAAjC,IAAA;QACA,SAAAI,UAAA;UACA,KAAAH,IAAA;UACA,KAAAG,UAAA;QACA;QACA,SAAA8B,CAAA,MAAAA,CAAA,GAAAD,GAAA,CAAAjC,IAAA,CAAAC,IAAA,CAAAkC,MAAA,EAAAD,CAAA;UACA,IAAAE,IAAA,GAAAH,GAAA,CAAAjC,IAAA,CAAAC,IAAA,CAAAiC,CAAA;UACA;UACA,KAAAjC,IAAA,CAAAoC,IAAA,CAAAD,IAAA;QACA;QACA,KAAAvB,KAAA,GAAAoB,GAAA,CAAAjC,IAAA,CAAAa,KAAA;QAEA,KAAAX,OAAA;QACA,SAAAS,MAAA,SAAAE,KAAA;UACA,KAAAV,QAAA;QACA;QAEA,KAAAQ,MAAA;MACA;IACA;IACAe,cAAA,GAEA;IAEAC,YAAA,GAEA;IACAW,UAAA;MACA;MACA,KAAAnC,QAAA;MAEA,KAAAQ,MAAA;MACA;MACA;MACA,KAAAT,OAAA;MACA,KAAAmB,MAAA;IACA;IACAkB,KAAA7B,EAAA,EAAA8B,MAAA;MACA;MACAZ,OAAA,CAAAC,GAAA,CAAAnB,EAAA,EAAA8B,MAAA;MACA,KAAAC,OAAA,CAAAJ,IAAA;QAAAK,IAAA;QAAAtB,MAAA;UAAAV,EAAA,EAAAA;QAAA;QAAAiC,KAAA;UAAAH,MAAA,EAAAA;QAAA;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}